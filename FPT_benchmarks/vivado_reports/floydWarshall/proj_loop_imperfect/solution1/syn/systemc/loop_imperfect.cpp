// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "loop_imperfect.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic loop_imperfect::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic loop_imperfect::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> loop_imperfect::ap_ST_fsm_state1 = "1";
const sc_lv<9> loop_imperfect::ap_ST_fsm_state2 = "10";
const sc_lv<9> loop_imperfect::ap_ST_fsm_state3 = "100";
const sc_lv<9> loop_imperfect::ap_ST_fsm_state4 = "1000";
const sc_lv<9> loop_imperfect::ap_ST_fsm_state5 = "10000";
const sc_lv<9> loop_imperfect::ap_ST_fsm_state6 = "100000";
const sc_lv<9> loop_imperfect::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> loop_imperfect::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> loop_imperfect::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> loop_imperfect::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> loop_imperfect::ap_const_lv32_1 = "1";
const sc_lv<1> loop_imperfect::ap_const_lv1_0 = "0";
const sc_lv<32> loop_imperfect::ap_const_lv32_2 = "10";
const sc_lv<32> loop_imperfect::ap_const_lv32_3 = "11";
const sc_lv<32> loop_imperfect::ap_const_lv32_4 = "100";
const sc_lv<32> loop_imperfect::ap_const_lv32_5 = "101";
const sc_lv<32> loop_imperfect::ap_const_lv32_6 = "110";
const sc_lv<32> loop_imperfect::ap_const_lv32_7 = "111";
const sc_lv<4> loop_imperfect::ap_const_lv4_0 = "0000";
const sc_lv<1> loop_imperfect::ap_const_lv1_1 = "1";
const sc_lv<32> loop_imperfect::ap_const_lv32_8 = "1000";
const sc_lv<4> loop_imperfect::ap_const_lv4_A = "1010";
const sc_lv<4> loop_imperfect::ap_const_lv4_1 = "1";
const sc_lv<3> loop_imperfect::ap_const_lv3_0 = "000";
const bool loop_imperfect::ap_const_boolean_1 = true;

loop_imperfect::loop_imperfect(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln99_1_fu_193_p2);
    sensitive << ( add_ln99_4_reg_260 );
    sensitive << ( zext_ln98_1_fu_177_p1 );

    SC_METHOD(thread_add_ln99_2_fu_207_p2);
    sensitive << ( shl_ln_reg_242 );
    sensitive << ( zext_ln99_4_fu_203_p1 );

    SC_METHOD(thread_add_ln99_3_fu_220_p2);
    sensitive << ( dist_load_1_reg_304 );
    sensitive << ( dist_load_2_reg_309 );

    SC_METHOD(thread_add_ln99_4_fu_157_p2);
    sensitive << ( zext_ln99_3_fu_153_p1 );
    sensitive << ( shl_ln99_2_fu_137_p3 );

    SC_METHOD(thread_add_ln99_5_fu_198_p2);
    sensitive << ( shl_ln99_1_reg_247 );
    sensitive << ( zext_ln98_fu_173_p1 );

    SC_METHOD(thread_add_ln99_fu_163_p2);
    sensitive << ( zext_ln96_reg_229 );
    sensitive << ( add_ln99_4_fu_157_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln96_fu_97_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln96_fu_97_p2 );

    SC_METHOD(thread_dist_address0);
    sensitive << ( dist_addr_reg_265 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln99_1_fu_212_p1 );

    SC_METHOD(thread_dist_address1);
    sensitive << ( dist_addr_1_reg_288 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln99_2_fu_216_p1 );

    SC_METHOD(thread_dist_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_dist_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_dist_d1);
    sensitive << ( add_ln99_3_reg_314 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_dist_we1);
    sensitive << ( icmp_ln99_reg_319 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_i_fu_131_p2);
    sensitive << ( i_0_reg_71 );

    SC_METHOD(thread_icmp_ln96_fu_97_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_0_reg_60 );

    SC_METHOD(thread_icmp_ln97_fu_125_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_reg_71 );

    SC_METHOD(thread_icmp_ln98_fu_181_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_reg_82 );

    SC_METHOD(thread_icmp_ln99_fu_224_p2);
    sensitive << ( dist_load_reg_294 );
    sensitive << ( add_ln99_3_fu_220_p2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_j_fu_187_p2);
    sensitive << ( j_0_reg_82 );

    SC_METHOD(thread_k_fu_103_p2);
    sensitive << ( k_0_reg_60 );

    SC_METHOD(thread_shl_ln99_1_fu_117_p3);
    sensitive << ( k_0_reg_60 );

    SC_METHOD(thread_shl_ln99_2_fu_137_p3);
    sensitive << ( i_0_reg_71 );

    SC_METHOD(thread_shl_ln99_3_fu_145_p3);
    sensitive << ( i_0_reg_71 );

    SC_METHOD(thread_shl_ln_fu_109_p3);
    sensitive << ( k_0_reg_60 );

    SC_METHOD(thread_zext_ln96_fu_93_p1);
    sensitive << ( k_0_reg_60 );

    SC_METHOD(thread_zext_ln98_1_fu_177_p1);
    sensitive << ( j_0_reg_82 );

    SC_METHOD(thread_zext_ln98_fu_173_p1);
    sensitive << ( j_0_reg_82 );

    SC_METHOD(thread_zext_ln99_1_fu_212_p1);
    sensitive << ( add_ln99_1_reg_278 );

    SC_METHOD(thread_zext_ln99_2_fu_216_p1);
    sensitive << ( add_ln99_2_reg_283 );

    SC_METHOD(thread_zext_ln99_3_fu_153_p1);
    sensitive << ( shl_ln99_3_fu_145_p3 );

    SC_METHOD(thread_zext_ln99_4_fu_203_p1);
    sensitive << ( add_ln99_5_fu_198_p2 );

    SC_METHOD(thread_zext_ln99_fu_168_p1);
    sensitive << ( add_ln99_fu_163_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln96_fu_97_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln97_fu_125_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln98_fu_181_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "loop_imperfect_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dist_address0, "(port)dist_address0");
    sc_trace(mVcdFile, dist_ce0, "(port)dist_ce0");
    sc_trace(mVcdFile, dist_q0, "(port)dist_q0");
    sc_trace(mVcdFile, dist_address1, "(port)dist_address1");
    sc_trace(mVcdFile, dist_ce1, "(port)dist_ce1");
    sc_trace(mVcdFile, dist_we1, "(port)dist_we1");
    sc_trace(mVcdFile, dist_d1, "(port)dist_d1");
    sc_trace(mVcdFile, dist_q1, "(port)dist_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, zext_ln96_fu_93_p1, "zext_ln96_fu_93_p1");
    sc_trace(mVcdFile, zext_ln96_reg_229, "zext_ln96_reg_229");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, k_fu_103_p2, "k_fu_103_p2");
    sc_trace(mVcdFile, k_reg_237, "k_reg_237");
    sc_trace(mVcdFile, shl_ln_fu_109_p3, "shl_ln_fu_109_p3");
    sc_trace(mVcdFile, shl_ln_reg_242, "shl_ln_reg_242");
    sc_trace(mVcdFile, icmp_ln96_fu_97_p2, "icmp_ln96_fu_97_p2");
    sc_trace(mVcdFile, shl_ln99_1_fu_117_p3, "shl_ln99_1_fu_117_p3");
    sc_trace(mVcdFile, shl_ln99_1_reg_247, "shl_ln99_1_reg_247");
    sc_trace(mVcdFile, i_fu_131_p2, "i_fu_131_p2");
    sc_trace(mVcdFile, i_reg_255, "i_reg_255");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln99_4_fu_157_p2, "add_ln99_4_fu_157_p2");
    sc_trace(mVcdFile, add_ln99_4_reg_260, "add_ln99_4_reg_260");
    sc_trace(mVcdFile, icmp_ln97_fu_125_p2, "icmp_ln97_fu_125_p2");
    sc_trace(mVcdFile, dist_addr_reg_265, "dist_addr_reg_265");
    sc_trace(mVcdFile, j_fu_187_p2, "j_fu_187_p2");
    sc_trace(mVcdFile, j_reg_273, "j_reg_273");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln99_1_fu_193_p2, "add_ln99_1_fu_193_p2");
    sc_trace(mVcdFile, add_ln99_1_reg_278, "add_ln99_1_reg_278");
    sc_trace(mVcdFile, icmp_ln98_fu_181_p2, "icmp_ln98_fu_181_p2");
    sc_trace(mVcdFile, add_ln99_2_fu_207_p2, "add_ln99_2_fu_207_p2");
    sc_trace(mVcdFile, add_ln99_2_reg_283, "add_ln99_2_reg_283");
    sc_trace(mVcdFile, dist_addr_1_reg_288, "dist_addr_1_reg_288");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, dist_load_reg_294, "dist_load_reg_294");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, dist_load_1_reg_304, "dist_load_1_reg_304");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, dist_load_2_reg_309, "dist_load_2_reg_309");
    sc_trace(mVcdFile, add_ln99_3_fu_220_p2, "add_ln99_3_fu_220_p2");
    sc_trace(mVcdFile, add_ln99_3_reg_314, "add_ln99_3_reg_314");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln99_fu_224_p2, "icmp_ln99_fu_224_p2");
    sc_trace(mVcdFile, icmp_ln99_reg_319, "icmp_ln99_reg_319");
    sc_trace(mVcdFile, k_0_reg_60, "k_0_reg_60");
    sc_trace(mVcdFile, i_0_reg_71, "i_0_reg_71");
    sc_trace(mVcdFile, j_0_reg_82, "j_0_reg_82");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, zext_ln99_fu_168_p1, "zext_ln99_fu_168_p1");
    sc_trace(mVcdFile, zext_ln99_1_fu_212_p1, "zext_ln99_1_fu_212_p1");
    sc_trace(mVcdFile, zext_ln99_2_fu_216_p1, "zext_ln99_2_fu_216_p1");
    sc_trace(mVcdFile, shl_ln99_3_fu_145_p3, "shl_ln99_3_fu_145_p3");
    sc_trace(mVcdFile, zext_ln99_3_fu_153_p1, "zext_ln99_3_fu_153_p1");
    sc_trace(mVcdFile, shl_ln99_2_fu_137_p3, "shl_ln99_2_fu_137_p3");
    sc_trace(mVcdFile, add_ln99_fu_163_p2, "add_ln99_fu_163_p2");
    sc_trace(mVcdFile, zext_ln98_1_fu_177_p1, "zext_ln98_1_fu_177_p1");
    sc_trace(mVcdFile, zext_ln98_fu_173_p1, "zext_ln98_fu_173_p1");
    sc_trace(mVcdFile, add_ln99_5_fu_198_p2, "add_ln99_5_fu_198_p2");
    sc_trace(mVcdFile, zext_ln99_4_fu_203_p1, "zext_ln99_4_fu_203_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("loop_imperfect.hdltvin.dat");
    mHdltvoutHandle.open("loop_imperfect.hdltvout.dat");
}

loop_imperfect::~loop_imperfect() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void loop_imperfect::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln98_fu_181_p2.read(), ap_const_lv1_1))) {
        i_0_reg_71 = i_reg_255.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln96_fu_97_p2.read(), ap_const_lv1_0))) {
        i_0_reg_71 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln97_fu_125_p2.read()))) {
        j_0_reg_82 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_0_reg_82 = j_reg_273.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln97_fu_125_p2.read(), ap_const_lv1_1))) {
        k_0_reg_60 = k_reg_237.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_0_reg_60 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln98_fu_181_p2.read()))) {
        add_ln99_1_reg_278 = add_ln99_1_fu_193_p2.read();
        add_ln99_2_reg_283 = add_ln99_2_fu_207_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        add_ln99_3_reg_314 = add_ln99_3_fu_220_p2.read();
        icmp_ln99_reg_319 = icmp_ln99_fu_224_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln97_fu_125_p2.read()))) {
        add_ln99_4_reg_260 = add_ln99_4_fu_157_p2.read();
        dist_addr_reg_265 =  (sc_lv<7>) (zext_ln99_fu_168_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dist_addr_1_reg_288 =  (sc_lv<7>) (zext_ln99_1_fu_212_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        dist_load_1_reg_304 = dist_q0.read();
        dist_load_2_reg_309 = dist_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        dist_load_reg_294 = dist_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_255 = i_fu_131_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_273 = j_fu_187_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_reg_237 = k_fu_103_p2.read();
        zext_ln96_reg_229 = zext_ln96_fu_93_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln96_fu_97_p2.read(), ap_const_lv1_0))) {
        shl_ln99_1_reg_247 = shl_ln99_1_fu_117_p3.read();
        shl_ln_reg_242 = shl_ln_fu_109_p3.read();
    }
}

void loop_imperfect::thread_add_ln99_1_fu_193_p2() {
    add_ln99_1_fu_193_p2 = (!add_ln99_4_reg_260.read().is_01() || !zext_ln98_1_fu_177_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(add_ln99_4_reg_260.read()) + sc_biguint<7>(zext_ln98_1_fu_177_p1.read()));
}

void loop_imperfect::thread_add_ln99_2_fu_207_p2() {
    add_ln99_2_fu_207_p2 = (!zext_ln99_4_fu_203_p1.read().is_01() || !shl_ln_reg_242.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln99_4_fu_203_p1.read()) + sc_biguint<7>(shl_ln_reg_242.read()));
}

void loop_imperfect::thread_add_ln99_3_fu_220_p2() {
    add_ln99_3_fu_220_p2 = (!dist_load_1_reg_304.read().is_01() || !dist_load_2_reg_309.read().is_01())? sc_lv<32>(): (sc_biguint<32>(dist_load_1_reg_304.read()) + sc_biguint<32>(dist_load_2_reg_309.read()));
}

void loop_imperfect::thread_add_ln99_4_fu_157_p2() {
    add_ln99_4_fu_157_p2 = (!zext_ln99_3_fu_153_p1.read().is_01() || !shl_ln99_2_fu_137_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln99_3_fu_153_p1.read()) + sc_biguint<7>(shl_ln99_2_fu_137_p3.read()));
}

void loop_imperfect::thread_add_ln99_5_fu_198_p2() {
    add_ln99_5_fu_198_p2 = (!shl_ln99_1_reg_247.read().is_01() || !zext_ln98_fu_173_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(shl_ln99_1_reg_247.read()) + sc_biguint<5>(zext_ln98_fu_173_p1.read()));
}

void loop_imperfect::thread_add_ln99_fu_163_p2() {
    add_ln99_fu_163_p2 = (!add_ln99_4_fu_157_p2.read().is_01() || !zext_ln96_reg_229.read().is_01())? sc_lv<7>(): (sc_biguint<7>(add_ln99_4_fu_157_p2.read()) + sc_biguint<7>(zext_ln96_reg_229.read()));
}

void loop_imperfect::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void loop_imperfect::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void loop_imperfect::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void loop_imperfect::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void loop_imperfect::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void loop_imperfect::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void loop_imperfect::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void loop_imperfect::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void loop_imperfect::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void loop_imperfect::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln96_fu_97_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void loop_imperfect::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void loop_imperfect::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln96_fu_97_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void loop_imperfect::thread_dist_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        dist_address0 = dist_addr_reg_265.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dist_address0 =  (sc_lv<7>) (zext_ln99_1_fu_212_p1.read());
    } else {
        dist_address0 = "XXXXXXX";
    }
}

void loop_imperfect::thread_dist_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        dist_address1 = dist_addr_1_reg_288.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        dist_address1 =  (sc_lv<7>) (zext_ln99_2_fu_216_p1.read());
    } else {
        dist_address1 = "XXXXXXX";
    }
}

void loop_imperfect::thread_dist_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        dist_ce0 = ap_const_logic_1;
    } else {
        dist_ce0 = ap_const_logic_0;
    }
}

void loop_imperfect::thread_dist_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        dist_ce1 = ap_const_logic_1;
    } else {
        dist_ce1 = ap_const_logic_0;
    }
}

void loop_imperfect::thread_dist_d1() {
    dist_d1 = add_ln99_3_reg_314.read();
}

void loop_imperfect::thread_dist_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln99_reg_319.read(), ap_const_lv1_1))) {
        dist_we1 = ap_const_logic_1;
    } else {
        dist_we1 = ap_const_logic_0;
    }
}

void loop_imperfect::thread_i_fu_131_p2() {
    i_fu_131_p2 = (!i_0_reg_71.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_71.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void loop_imperfect::thread_icmp_ln96_fu_97_p2() {
    icmp_ln96_fu_97_p2 = (!k_0_reg_60.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_60.read() == ap_const_lv4_A);
}

void loop_imperfect::thread_icmp_ln97_fu_125_p2() {
    icmp_ln97_fu_125_p2 = (!i_0_reg_71.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_71.read() == ap_const_lv4_A);
}

void loop_imperfect::thread_icmp_ln98_fu_181_p2() {
    icmp_ln98_fu_181_p2 = (!j_0_reg_82.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_82.read() == ap_const_lv4_A);
}

void loop_imperfect::thread_icmp_ln99_fu_224_p2() {
    icmp_ln99_fu_224_p2 = (!dist_load_reg_294.read().is_01() || !add_ln99_3_fu_220_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(dist_load_reg_294.read()) > sc_bigint<32>(add_ln99_3_fu_220_p2.read()));
}

void loop_imperfect::thread_j_fu_187_p2() {
    j_fu_187_p2 = (!j_0_reg_82.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_reg_82.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void loop_imperfect::thread_k_fu_103_p2() {
    k_fu_103_p2 = (!k_0_reg_60.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_0_reg_60.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void loop_imperfect::thread_shl_ln99_1_fu_117_p3() {
    shl_ln99_1_fu_117_p3 = esl_concat<4,1>(k_0_reg_60.read(), ap_const_lv1_0);
}

void loop_imperfect::thread_shl_ln99_2_fu_137_p3() {
    shl_ln99_2_fu_137_p3 = esl_concat<4,3>(i_0_reg_71.read(), ap_const_lv3_0);
}

void loop_imperfect::thread_shl_ln99_3_fu_145_p3() {
    shl_ln99_3_fu_145_p3 = esl_concat<4,1>(i_0_reg_71.read(), ap_const_lv1_0);
}

void loop_imperfect::thread_shl_ln_fu_109_p3() {
    shl_ln_fu_109_p3 = esl_concat<4,3>(k_0_reg_60.read(), ap_const_lv3_0);
}

void loop_imperfect::thread_zext_ln96_fu_93_p1() {
    zext_ln96_fu_93_p1 = esl_zext<7,4>(k_0_reg_60.read());
}

void loop_imperfect::thread_zext_ln98_1_fu_177_p1() {
    zext_ln98_1_fu_177_p1 = esl_zext<7,4>(j_0_reg_82.read());
}

void loop_imperfect::thread_zext_ln98_fu_173_p1() {
    zext_ln98_fu_173_p1 = esl_zext<5,4>(j_0_reg_82.read());
}

void loop_imperfect::thread_zext_ln99_1_fu_212_p1() {
    zext_ln99_1_fu_212_p1 = esl_zext<64,7>(add_ln99_1_reg_278.read());
}

void loop_imperfect::thread_zext_ln99_2_fu_216_p1() {
    zext_ln99_2_fu_216_p1 = esl_zext<64,7>(add_ln99_2_reg_283.read());
}

void loop_imperfect::thread_zext_ln99_3_fu_153_p1() {
    zext_ln99_3_fu_153_p1 = esl_zext<7,5>(shl_ln99_3_fu_145_p3.read());
}

void loop_imperfect::thread_zext_ln99_4_fu_203_p1() {
    zext_ln99_4_fu_203_p1 = esl_zext<7,5>(add_ln99_5_fu_198_p2.read());
}

void loop_imperfect::thread_zext_ln99_fu_168_p1() {
    zext_ln99_fu_168_p1 = esl_zext<64,7>(add_ln99_fu_163_p2.read());
}

void loop_imperfect::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln96_fu_97_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln97_fu_125_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln98_fu_181_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void loop_imperfect::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dist_address0\" :  \"" << dist_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dist_ce0\" :  \"" << dist_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dist_q0\" :  \"" << dist_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dist_address1\" :  \"" << dist_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dist_ce1\" :  \"" << dist_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dist_we1\" :  \"" << dist_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dist_d1\" :  \"" << dist_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dist_q1\" :  \"" << dist_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

