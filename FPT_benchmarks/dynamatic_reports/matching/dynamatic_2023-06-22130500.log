

******************************************************************
******Dynamic High-Level Synthesis Compiler***********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Version 2.0 - Build 1.0 ************************************
******************************************************************

synthesis_optimized.tcl
Done 
set input file: matching.cpp
current input filename: ./src/matching.cpp
Done 
Synthesize
compile matching.cpp . -use-lsq=true Andrea: arg1:  matching.cpp arg2: . arg3 -use-lsq=true arg4
/home/dynamatic/Dynamatic/etc/llvm-6.0/bin/clang -emit-llvm -S   -c src/matching.cpp -o .matching.cpp.ll
rm: cannot remove '*.s': No such file or directory
0; ModuleID = '.matching.cpp_mem2reg_constprop_simplifycfg_die.ll'
source_filename = "src/matching.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define i32 @_Z8matchingPiS_(i32* %vertices, i32* %edges) #0 {
block1:
  br label %block2

block2:                                           ; preds = %block4, %block1
  %out_scalar.02 = phi i32 [ 0, %block1 ], [ %out_scalar.1, %block4 ]
  %i.01 = phi i32 [ 0, %block1 ], [ %add14, %block4 ]
  %mul = shl nuw nsw i32 %i.01, 1
  %"2" = zext i32 %mul to i64
  %arrayidx = getelementptr inbounds i32, i32* %edges, i64 %"2"
  %"3" = load i32, i32* %arrayidx, align 4
  %add = or i32 %mul, 1
  %"4" = zext i32 %add to i64
  %arrayidx2 = getelementptr inbounds i32, i32* %edges, i64 %"4"
  %"5" = load i32, i32* %arrayidx2, align 4
  %idxprom3 = sext i32 %"3" to i64
  %arrayidx4 = getelementptr inbounds i32, i32* %vertices, i64 %idxprom3
  %"6" = load i32, i32* %arrayidx4, align 4
  %idxprom5 = sext i32 %"5" to i64
  %arrayidx6 = getelementptr inbounds i32, i32* %vertices, i64 %idxprom5
  %"7" = load i32, i32* %arrayidx6, align 4
  %"8" = or i32 %"6", %"7"
  %"9" = icmp eq i32 %"8", 0
  br i1 %"9", label %block3, label %block4

block3:                                           ; preds = %block2
  %idxprom9 = sext i32 %"3" to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %vertices, i64 %idxprom9
  store i32 1, i32* %arrayidx10, align 4
  %idxprom11 = sext i32 %"5" to i64
  %arrayidx12 = getelementptr inbounds i32, i32* %vertices, i64 %idxprom11
  store i32 1, i32* %arrayidx12, align 4
  %add13 = add nsw i32 %out_scalar.02, 1
  br label %block4

block4:                                           ; preds = %block3, %block2
  %out_scalar.1 = phi i32 [ %add13, %block3 ], [ %out_scalar.02, %block2 ]
  %add14 = add nuw nsw i32 %i.01, 1
  %cmp = icmp ult i32 %add14, 1000
  br i1 %cmp, label %block2, label %block5

block5:                                           ; preds = %block4
  ret i32 %out_scalar.1
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() #1 {
entry:
  %edges = alloca [1 x [2000 x i32]], align 16
  %vertices = alloca [1 x [2000 x i32]], align 16
  br label %for.body

for.body:                                         ; preds = %for.inc10, %entry
  br label %for.body3

for.body3:                                        ; preds = %for.body3, %for.body
  %y.01 = phi i32 [ 0, %for.body ], [ %inc, %for.body3 ]
  %0 = zext i32 %y.01 to i64
  %1 = getelementptr inbounds [1 x [2000 x i32]], [1 x [2000 x i32]]* %edges, i64 0, i64 0, i64 %0
  store i32 %y.01, i32* %1, align 4
  %2 = zext i32 %y.01 to i64
  %3 = getelementptr inbounds [1 x [2000 x i32]], [1 x [2000 x i32]]* %vertices, i64 0, i64 0, i64 %2
  store i32 0, i32* %3, align 4
  %inc = add nuw nsw i32 %y.01, 1
  %cmp2 = icmp ult i32 %inc, 2000
  br i1 %cmp2, label %for.body3, label %for.inc10

for.inc10:                                        ; preds = %for.body3
  br i1 false, label %for.body, label %for.end12

for.end12:                                        ; preds = %for.inc10
  %arraydecay = getelementptr inbounds [1 x [2000 x i32]], [1 x [2000 x i32]]* %vertices, i64 0, i64 0, i64 0
  %arraydecay15 = getelementptr inbounds [1 x [2000 x i32]], [1 x [2000 x i32]]* %edges, i64 0, i64 0, i64 0
  %call = call i32 @_Z8matchingPiS_(i32* nonnull %arraydecay, i32* nonnull %arraydecay15)
  ret i32 0
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.1 (http://llvm.org/git/clang.git 2f27999df400d17b33cdd412fdd606a88208dfcc) (http://llvm.org/git/llvm.git 5136df4d089a086b70d452160ad5451861269498)"}


Done 
Done 
Optimize
buffers buffers -filename=./reports/matching -period=4 
Aya: INSIDE main_shab!

Aya: before parse_user_input!

Aya: after parse_user_input!
****************************************
dataflow graph name: ./reports/matching
milp solver: cbc
delay: 0, period: 4
timeout: 180
set optimization: true
first MG optimization: false
****************************************

Aya: after print_input!

Aya: Before constructing a DF object!
currently traversing node cst_0
currently traversing node cst_1
currently traversing node start_0
currently traversing node cst_10
currently traversing node forkC_5
currently traversing node phi_1
currently traversing node phi_2
currently traversing node cst_2
currently traversing node shl_3
currently traversing node load_6
currently traversing node cst_3
currently traversing node or_7
currently traversing node load_10
currently traversing node load_13
currently traversing node load_16
currently traversing node or_17
currently traversing node cst_4
currently traversing node icmp_18
currently traversing node forkC_0
currently traversing node buffer_bx_op_0
currently traversing node phiC_1
currently traversing node phi_n2
currently traversing node phiC_3
currently traversing node branch_3
currently traversing node branch_4
currently traversing node branch_5
currently traversing node branchC_8
currently traversing node branchC_11
currently traversing node branchC_12
currently traversing node fork_0
currently traversing node fork_1
currently traversing node fork_2
currently traversing node fork_6
currently traversing node forkC_7
currently traversing node fork_9
currently traversing node fork_10
currently traversing node cst_5
currently traversing node store_0
currently traversing node cst_6
currently traversing node store_1
currently traversing node cst_7
currently traversing node add_24
currently traversing node forkC_1
currently traversing node buffer_bx_op_1
currently traversing node phiC_0
currently traversing node forkC_8
currently traversing node phi_26
currently traversing node cst_8
currently traversing node add_27
currently traversing node cst_9
currently traversing node icmp_28
currently traversing node branchC_0
currently traversing node branch_1
currently traversing node branch_2
currently traversing node fork_3
currently traversing node fork_4
currently traversing node ret_0
currently traversing node LSQ_vertices
currently traversing node MC_edges
currently traversing node sink_0
currently traversing node sink_1
currently traversing node sink_2
currently traversing node sink_3
currently traversing node sink_4
currently traversing node sink_5
currently traversing node end_0

Entering DF_I check function!!

Coming out of DF_I check function!!
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB5
Setting BB frequencies...
BB1 : 1
BB2 : 1000
BB3 : 1000
BB4 : 1000
BB5 : 1


Aya: After constructing a DF object!
Adding elastic buffers with period=4 and buffer_delay=0


Aya: Before calling DF.setMilpSolver!

Aya: After returning from DF.setMilpSolver!

Aya: Before calling DF.addElasticBuffersBB_sc!
======================
ADDING ELASTIC BUFFERS
======================
Extracting marked graphs
--------------------------
Iteration 1
ILP time: [ms] 11 
Arcs in the CFDFC:
	2->3:1000
	3->4:1000
	4->2:999
Updating frequencies...
Storing CFDFC and corresponding Marked Graph...
--------------------------
Iteration 2
ILP time: [ms] 9 
Arcs in the CFDFC:
No new MG can be extracted to increase coverage.

*******************
Covered Frequency = 2997, Total Frequency = 3001, Coverage = 0.998667
*******************

Aya:Done Extracting marked graphs!

determining buffer from/to MC_LSQ units to/from loads.
Calculating disjoint sets of CFDFCs...
	initialize
	union
	get set of unique dsu numbers
	merge and get sub-components
Total number of Extracted Disjoint CFDFCs: 1
Adding Marked Graphs from CFDFCs...


===================================
PRINTING CHANNELS FREQUENCIES
Freq of channel in Src_BB number 1 and dst_BB number 2 is::: 1
Freq of channel in Src_BB number 1 and dst_BB number 2 is::: 1
Freq of channel in Src_BB number 1 and dst_BB number 1 is::: 1
Freq of channel in Src_BB number 1 and dst_BB number 2 is::: 1
Freq of channel in Src_BB number 1 and dst_BB number 1 is::: 1
Freq of channel in Src_BB number 1 and dst_BB number 1 is::: 1
Freq of channel in Src_BB number 1 and dst_BB number 1 is::: 1
Freq of channel in Src_BB number 1 and dst_BB number 2 is::: 1
Freq of channel in Src_BB number 1 and dst_BB number 2 is::: 1
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 4 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 4 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 4 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 4 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 4 is::: 0
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 2 and dst_BB number 2 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 3 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 3 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 3 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 3 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 3 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 3 and dst_BB number 3 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 2 is::: 999
Freq of channel in Src_BB number 4 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 4 and dst_BB number 2 is::: 999
Freq of channel in Src_BB number 4 and dst_BB number 5 is::: 1
Freq of channel in Src_BB number 4 and dst_BB number 2 is::: 999
Freq of channel in Src_BB number 4 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 2 is::: 999
Freq of channel in Src_BB number 4 and dst_BB number 2 is::: 999
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 4 and dst_BB number 4 is::: 1000
Freq of channel in Src_BB number 5 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 0 and dst_BB number 2 is::: 0
Freq of channel in Src_BB number 0 and dst_BB number 2 is::: 0
Freq of channel in Src_BB number 0 and dst_BB number 0 is::: 0
Freq of channel in Src_BB number 0 and dst_BB number 2 is::: 0
Freq of channel in Src_BB number 0 and dst_BB number 2 is::: 0
Freq of channel in Src_BB number 0 and dst_BB number 0 is::: 0

===================================
-------------------------------
Initiating MILP for MG number 0
-------------------------------
 creating throughput vars for sub_mg0

Aya: Before the loop over Blocks

Aya: After the loop over Blocks

Aya: Before the loop over Channels

Aya: After the loop over Channels

Aya: Done with the function createMilpVarsEB_sc

Aya: done with the first loop over channels!

Aya: done with the second loop over channels!

Aya: done with the first loop over blocks!

Aya: done with the second loop over blocks!

Aya: done with createPathConstraints_sc boolean function!!

Aya: done with createElasticityConstraints_sc boolean function!!
Lana: back edge is branchC_11:out2 -> phiC_3:in2
Lana: back edge is branchC_0:out2 -> phiC_1:in2
Lana: back edge is branch_1:out2 -> phi_1:in2
Lana: back edge is branch_2:out2 -> phi_2:in2
Lana: back edge is fork_4:out2 -> phi_n2:in2
Solving MILP for elastic buffers: MG 0
Milp time for MG 0: [ms] 880 

************************
*** Throughput for MG 0 in disjoint MG 0: 0.50 ***
************************
Adding buffer in phi_1:out1 -> branch_5:in1 | slots: 2, trans: 0 | BB2 -> BB2 (inner)
Adding buffer in phi_2:out1 -> fork_0:in1 | slots: 2, trans: 0 | BB2 -> BB2 (inner)
Adding buffer in phiC_3:out1 -> forkC_7:in1 | slots: 2, trans: 0 | BB2 -> BB2 (inner)
Adding buffer in branchC_8:out1 -> phiC_0:in3 | slots: 1, trans: 1 | BB2 -> BB3
Adding buffer in fork_2:out1 -> phiC_0:in1 | slots: 1, trans: 1 | BB2 -> BB3
Adding buffer in fork_6:out2 -> phi_1:in1 | slots: 4, trans: 1 | BB2 -> BB2 (inner)
Adding buffer in fork_6:out1 -> phiC_1:in1 | slots: 4, trans: 1 | BB2 -> BB2 (inner)
Adding buffer in forkC_7:out4 -> cst_4:in1 | slots: 4, trans: 1 | BB2 -> BB2 (inner)
Adding buffer in forkC_7:out5 -> branchC_8:in1 | slots: 4, trans: 1 | BB2 -> BB2 (inner)
Adding buffer in fork_9:out2 -> branch_3:in1 | slots: 3, trans: 1 | BB2 -> BB2 (inner)
Adding buffer in fork_10:out2 -> branch_4:in1 | slots: 3, trans: 1 | BB2 -> BB2 (inner)
Adding buffer in fork_4:out1 -> branchC_0:in2 | slots: 5, trans: 0 | BB4 -> BB4 (inner)
Adding buffer in fork_4:out3 -> branch_1:in2 | slots: 4, trans: 1 | BB4 -> BB4 (inner)

*** Throughput achieved in sub MG 0: 0.50 ***

--------------------------------------
Initiating MILP for remaining channels
--------------------------------------
Solving MILP for channels not covered by MGs
Milp time for remaining channels: [ms] 28 

***************************
Total MILP time: [ms] 908
***************************

Aya: After calling DF.addElasticBuffersBB_sc!
INSTANTIATE
Done 
Write hdl
write_hdl  . ./reports/matching_optimized

******************************************************************
******Dynamic High-Level Synthesis Compiler **********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Dot to VHDL Generator***************************************
******************************************************************
Parsing ./reports/matching_optimized.dot

Report Modules 
+--------------------------------------------------------------------------+
|   Node_ID|                Name|         Module_type|    Inputs|   Outputs|
+--------------------------------------------------------------------------+
|         0|               cst_0|            Constant|         1|         1|
|         1|               cst_1|            Constant|         1|         1|
|         2|             start_0|               Entry|         1|         1|
|         3|              cst_10|            Constant|         1|         1|
|         4|             forkC_5|                Fork|         1|         5|
|         5|               phi_1|                 Mux|         3|         1|
|         6|               phi_2|                 Mux|         3|         1|
|         7|               cst_2|            Constant|         1|         1|
|         8|               shl_3|            Operator|         2|         1|
|         9|              load_6|            Operator|         2|         2|
|        10|               cst_3|            Constant|         1|         1|
|        11|                or_7|            Operator|         2|         1|
|        12|             load_10|            Operator|         2|         2|
|        13|             load_13|            Operator|         2|         2|
|        14|             load_16|            Operator|         2|         2|
|        15|               or_17|            Operator|         2|         1|
|        16|               cst_4|            Constant|         1|         1|
|        17|             icmp_18|            Operator|         2|         1|
|        18|             forkC_0|                Fork|         1|         2|
|        19|      buffer_bx_op_0|            Operator|         1|         1|
|        20|              phiC_1|                 Mux|         3|         1|
|        21|              phi_n2|               Merge|         2|         1|
|        22|              phiC_3|                 Mux|         3|         1|
|        23|            branch_3|              Branch|         2|         2|
|        24|            branch_4|              Branch|         2|         2|
|        25|            branch_5|              Branch|         2|         2|
|        26|           branchC_8|              Branch|         2|         2|
|        27|          branchC_11|              Branch|         2|         2|
|        28|          branchC_12|              Branch|         2|         2|
|        29|              fork_0|                Fork|         1|         2|
|        30|              fork_1|                Fork|         1|         2|
|        31|              fork_2|                Fork|         1|         7|
|        32|              fork_6|                Fork|         1|         4|
|        33|             forkC_7|                Fork|         1|         7|
|        34|              fork_9|                Fork|         1|         2|
|        35|             fork_10|                Fork|         1|         2|
|        36|            Buffer_1|              Buffer|         1|         1|
|        37|            Buffer_2|              Buffer|         1|         1|
|        38|            Buffer_3|              Buffer|         1|         1|
|        39|            Buffer_4|              Buffer|         1|         1|
|        40|            Buffer_5|                TEHB|         1|         1|
|        41|            Buffer_6|                TEHB|         1|         1|
|        42|            Buffer_7|               tFifo|         1|         1|
|        43|            Buffer_8|               tFifo|         1|         1|
|        44|            Buffer_9|               tFifo|         1|         1|
|        45|           Buffer_10|               tFifo|         1|         1|
|        46|           Buffer_11|               tFifo|         1|         1|
|        47|           Buffer_12|               tFifo|         1|         1|
|        48|               cst_5|            Constant|         1|         1|
|        49|             store_0|            Operator|         2|         2|
|        50|               cst_6|            Constant|         1|         1|
|        51|             store_1|            Operator|         2|         2|
|        52|               cst_7|            Constant|         1|         1|
|        53|              add_24|            Operator|         2|         1|
|        54|             forkC_1|                Fork|         1|         2|
|        55|      buffer_bx_op_1|            Operator|         1|         1|
|        56|              phiC_0|                 Mux|         3|         1|
|        57|             forkC_8|                Fork|         1|         3|
|        58|           Buffer_13|              Buffer|         1|         1|
|        59|              phi_26|                 Mux|         3|         1|
|        60|               cst_8|            Constant|         1|         1|
|        61|              add_27|            Operator|         2|         1|
|        62|               cst_9|            Constant|         1|         1|
|        63|             icmp_28|            Operator|         2|         1|
|        64|           branchC_0|              Branch|         2|         2|
|        65|            branch_1|              Branch|         2|         2|
|        66|            branch_2|              Branch|         2|         2|
|        67|              fork_3|                Fork|         1|         2|
|        68|              fork_4|                Fork|         1|         5|
|        69|           Buffer_14|               nFifo|         1|         1|
|        70|           Buffer_15|               tFifo|         1|         1|
|        71|               ret_0|            Operator|         1|         1|
|        72|        LSQ_vertices|                 LSQ|         8|         3|
|        73|            MC_edges|                  MC|         5|         3|
|        74|              sink_0|                Sink|         1|         0|
|        75|              sink_1|                Sink|         1|         0|
|        76|              sink_2|                Sink|         1|         0|
|        77|              sink_3|                Sink|         1|         0|
|        78|              sink_4|                Sink|         1|         0|
|        79|              sink_5|                Sink|         1|         0|
|        80|               end_0|                Exit|         3|         1|
+--------------------------------------------------------------------------+
Generating ./reports/matching_optimized.vhd
Generating LSQ 0 component...
lsq_generate ./reports/matching_optimized_lsq0_configuration.json
[[35minfo[0m] [0.015] Elaborating design...
[[35minfo[0m] [1.781] Done elaborating.
Total FIRRTL Compile Time: 13410.1 ms

Done



Done 
Exit...
Goodbye!


