-- ==============================================================
-- Generated by Dot2Vhdl ver. 2.0
-- File created: Tue Jun 20 17:14:33 2023

-- ==============================================================
library IEEE; 
use IEEE.std_logic_1164.all; 
use IEEE.numeric_std.all; 
use work.customTypes.all; 
-- ==============================================================
entity histogram is 
port (
	clk:  in std_logic;
	rst:  in std_logic;
	start_in:  in std_logic_vector (0 downto 0);
	start_valid:  in std_logic;
	start_ready:  out std_logic;
	end_out:  out std_logic_vector (31 downto 0);
	end_valid:  out std_logic;
	end_ready:  in std_logic;
	n_din : in std_logic_vector (31 downto 0);
	n_valid_in : in std_logic;
	n_ready_out : out std_logic;
	hist_address0 : out std_logic_vector (31 downto 0);
	hist_ce0 : out std_logic;
	hist_we0 : out std_logic;
	hist_dout0 : out std_logic_vector (31 downto 0);
	hist_din0 : in std_logic_vector (31 downto 0);
	hist_address1 : out std_logic_vector (31 downto 0);
	hist_ce1 : out std_logic;
	hist_we1 : out std_logic;
	hist_dout1 : out std_logic_vector (31 downto 0);
	hist_din1 : in std_logic_vector (31 downto 0);
	feature_address0 : out std_logic_vector (31 downto 0);
	feature_ce0 : out std_logic;
	feature_we0 : out std_logic;
	feature_dout0 : out std_logic_vector (31 downto 0);
	feature_din0 : in std_logic_vector (31 downto 0);
	feature_address1 : out std_logic_vector (31 downto 0);
	feature_ce1 : out std_logic;
	feature_we1 : out std_logic;
	feature_dout1 : out std_logic_vector (31 downto 0);
	feature_din1 : in std_logic_vector (31 downto 0);
	weight_address0 : out std_logic_vector (31 downto 0);
	weight_ce0 : out std_logic;
	weight_we0 : out std_logic;
	weight_dout0 : out std_logic_vector (31 downto 0);
	weight_din0 : in std_logic_vector (31 downto 0);
	weight_address1 : out std_logic_vector (31 downto 0);
	weight_ce1 : out std_logic;
	weight_we1 : out std_logic;
	weight_dout1 : out std_logic_vector (31 downto 0);
	weight_din1 : in std_logic_vector (31 downto 0));
end;

architecture behavioral of histogram is 

	signal n_clk : std_logic;
	signal n_rst : std_logic;
	signal n_dataInArray_0 : std_logic_vector(31 downto 0);
	signal n_pValidArray_0 : std_logic;
	signal n_readyArray_0 : std_logic;
	signal n_nReadyArray_0 : std_logic;
	signal n_validArray_0 : std_logic;
	signal n_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal cst_0_clk : std_logic;
	signal cst_0_rst : std_logic;
	signal cst_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_0_pValidArray_0 : std_logic;
	signal cst_0_readyArray_0 : std_logic;
	signal cst_0_nReadyArray_0 : std_logic;
	signal cst_0_validArray_0 : std_logic;
	signal cst_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal icmp_0_clk : std_logic;
	signal icmp_0_rst : std_logic;
	signal icmp_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal icmp_0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal icmp_0_pValidArray_0 : std_logic;
	signal icmp_0_pValidArray_1 : std_logic;
	signal icmp_0_readyArray_0 : std_logic;
	signal icmp_0_readyArray_1 : std_logic;
	signal icmp_0_nReadyArray_0 : std_logic;
	signal icmp_0_validArray_0 : std_logic;
	signal icmp_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal cst_3_clk : std_logic;
	signal cst_3_rst : std_logic;
	signal cst_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_3_pValidArray_0 : std_logic;
	signal cst_3_readyArray_0 : std_logic;
	signal cst_3_nReadyArray_0 : std_logic;
	signal cst_3_validArray_0 : std_logic;
	signal cst_3_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal start_0_clk : std_logic;
	signal start_0_rst : std_logic;
	signal start_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal start_0_pValidArray_0 : std_logic;
	signal start_0_readyArray_0 : std_logic;
	signal start_0_nReadyArray_0 : std_logic;
	signal start_0_validArray_0 : std_logic;
	signal start_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal cst_4_clk : std_logic;
	signal cst_4_rst : std_logic;
	signal cst_4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_4_pValidArray_0 : std_logic;
	signal cst_4_readyArray_0 : std_logic;
	signal cst_4_nReadyArray_0 : std_logic;
	signal cst_4_validArray_0 : std_logic;
	signal cst_4_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal branch_1_clk : std_logic;
	signal branch_1_rst : std_logic;
	signal branch_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_1_dataInArray_1 : std_logic_vector(0 downto 0);
	signal branch_1_pValidArray_0 : std_logic;
	signal branch_1_pValidArray_1 : std_logic;
	signal branch_1_readyArray_0 : std_logic;
	signal branch_1_readyArray_1 : std_logic;
	signal branch_1_nReadyArray_0 : std_logic;
	signal branch_1_validArray_0 : std_logic;
	signal branch_1_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_1_nReadyArray_1 : std_logic;
	signal branch_1_validArray_1 : std_logic;
	signal branch_1_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_3_clk : std_logic;
	signal branch_3_rst : std_logic;
	signal branch_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_3_dataInArray_1 : std_logic_vector(0 downto 0);
	signal branch_3_pValidArray_0 : std_logic;
	signal branch_3_pValidArray_1 : std_logic;
	signal branch_3_readyArray_0 : std_logic;
	signal branch_3_readyArray_1 : std_logic;
	signal branch_3_nReadyArray_0 : std_logic;
	signal branch_3_validArray_0 : std_logic;
	signal branch_3_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_3_nReadyArray_1 : std_logic;
	signal branch_3_validArray_1 : std_logic;
	signal branch_3_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branchC_5_clk : std_logic;
	signal branchC_5_rst : std_logic;
	signal branchC_5_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_5_dataInArray_1 : std_logic_vector(0 downto 0);
	signal branchC_5_pValidArray_0 : std_logic;
	signal branchC_5_pValidArray_1 : std_logic;
	signal branchC_5_readyArray_0 : std_logic;
	signal branchC_5_readyArray_1 : std_logic;
	signal branchC_5_nReadyArray_0 : std_logic;
	signal branchC_5_validArray_0 : std_logic;
	signal branchC_5_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_5_nReadyArray_1 : std_logic;
	signal branchC_5_validArray_1 : std_logic;
	signal branchC_5_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal fork_0_clk : std_logic;
	signal fork_0_rst : std_logic;
	signal fork_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_0_pValidArray_0 : std_logic;
	signal fork_0_readyArray_0 : std_logic;
	signal fork_0_nReadyArray_0 : std_logic;
	signal fork_0_validArray_0 : std_logic;
	signal fork_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_0_nReadyArray_1 : std_logic;
	signal fork_0_validArray_1 : std_logic;
	signal fork_0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal fork_1_clk : std_logic;
	signal fork_1_rst : std_logic;
	signal fork_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_1_pValidArray_0 : std_logic;
	signal fork_1_readyArray_0 : std_logic;
	signal fork_1_nReadyArray_0 : std_logic;
	signal fork_1_validArray_0 : std_logic;
	signal fork_1_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_1_nReadyArray_1 : std_logic;
	signal fork_1_validArray_1 : std_logic;
	signal fork_1_dataOutArray_1 : std_logic_vector(31 downto 0);
	signal fork_1_nReadyArray_2 : std_logic;
	signal fork_1_validArray_2 : std_logic;
	signal fork_1_dataOutArray_2 : std_logic_vector(31 downto 0);
	signal fork_1_nReadyArray_3 : std_logic;
	signal fork_1_validArray_3 : std_logic;
	signal fork_1_dataOutArray_3 : std_logic_vector(31 downto 0);

	signal forkC_5_clk : std_logic;
	signal forkC_5_rst : std_logic;
	signal forkC_5_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_5_pValidArray_0 : std_logic;
	signal forkC_5_readyArray_0 : std_logic;
	signal forkC_5_nReadyArray_0 : std_logic;
	signal forkC_5_validArray_0 : std_logic;
	signal forkC_5_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal forkC_5_nReadyArray_1 : std_logic;
	signal forkC_5_validArray_1 : std_logic;
	signal forkC_5_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal forkC_5_nReadyArray_2 : std_logic;
	signal forkC_5_validArray_2 : std_logic;
	signal forkC_5_dataOutArray_2 : std_logic_vector(0 downto 0);
	signal forkC_5_nReadyArray_3 : std_logic;
	signal forkC_5_validArray_3 : std_logic;
	signal forkC_5_dataOutArray_3 : std_logic_vector(0 downto 0);

	signal cst_1_clk : std_logic;
	signal cst_1_rst : std_logic;
	signal cst_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_1_pValidArray_0 : std_logic;
	signal cst_1_readyArray_0 : std_logic;
	signal cst_1_nReadyArray_0 : std_logic;
	signal cst_1_validArray_0 : std_logic;
	signal cst_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal forkC_9_clk : std_logic;
	signal forkC_9_rst : std_logic;
	signal forkC_9_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_9_pValidArray_0 : std_logic;
	signal forkC_9_readyArray_0 : std_logic;
	signal forkC_9_nReadyArray_0 : std_logic;
	signal forkC_9_validArray_0 : std_logic;
	signal forkC_9_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal forkC_9_nReadyArray_1 : std_logic;
	signal forkC_9_validArray_1 : std_logic;
	signal forkC_9_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal phi_3_clk : std_logic;
	signal phi_3_rst : std_logic;
	signal phi_3_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phi_3_dataInArray_1 : std_logic_vector(31 downto 0);
	signal phi_3_dataInArray_2 : std_logic_vector(31 downto 0);
	signal phi_3_pValidArray_0 : std_logic;
	signal phi_3_pValidArray_1 : std_logic;
	signal phi_3_pValidArray_2 : std_logic;
	signal phi_3_readyArray_0 : std_logic;
	signal phi_3_readyArray_1 : std_logic;
	signal phi_3_readyArray_2 : std_logic;
	signal phi_3_nReadyArray_0 : std_logic;
	signal phi_3_validArray_0 : std_logic;
	signal phi_3_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal load_6_clk : std_logic;
	signal load_6_rst : std_logic;
	signal load_6_dataInArray_0 : std_logic_vector(31 downto 0);
	signal load_6_dataInArray_1 : std_logic_vector(31 downto 0);
	signal load_6_pValidArray_0 : std_logic;
	signal load_6_pValidArray_1 : std_logic;
	signal load_6_readyArray_0 : std_logic;
	signal load_6_readyArray_1 : std_logic;
	signal load_6_nReadyArray_0 : std_logic;
	signal load_6_validArray_0 : std_logic;
	signal load_6_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal load_6_nReadyArray_1 : std_logic;
	signal load_6_validArray_1 : std_logic;
	signal load_6_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal load_9_clk : std_logic;
	signal load_9_rst : std_logic;
	signal load_9_dataInArray_0 : std_logic_vector(31 downto 0);
	signal load_9_dataInArray_1 : std_logic_vector(31 downto 0);
	signal load_9_pValidArray_0 : std_logic;
	signal load_9_pValidArray_1 : std_logic;
	signal load_9_readyArray_0 : std_logic;
	signal load_9_readyArray_1 : std_logic;
	signal load_9_nReadyArray_0 : std_logic;
	signal load_9_validArray_0 : std_logic;
	signal load_9_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal load_9_nReadyArray_1 : std_logic;
	signal load_9_validArray_1 : std_logic;
	signal load_9_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal load_12_clk : std_logic;
	signal load_12_rst : std_logic;
	signal load_12_dataInArray_0 : std_logic_vector(31 downto 0);
	signal load_12_dataInArray_1 : std_logic_vector(31 downto 0);
	signal load_12_pValidArray_0 : std_logic;
	signal load_12_pValidArray_1 : std_logic;
	signal load_12_readyArray_0 : std_logic;
	signal load_12_readyArray_1 : std_logic;
	signal load_12_nReadyArray_0 : std_logic;
	signal load_12_validArray_0 : std_logic;
	signal load_12_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal load_12_nReadyArray_1 : std_logic;
	signal load_12_validArray_1 : std_logic;
	signal load_12_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal add_13_clk : std_logic;
	signal add_13_rst : std_logic;
	signal add_13_dataInArray_0 : std_logic_vector(31 downto 0);
	signal add_13_dataInArray_1 : std_logic_vector(31 downto 0);
	signal add_13_pValidArray_0 : std_logic;
	signal add_13_pValidArray_1 : std_logic;
	signal add_13_readyArray_0 : std_logic;
	signal add_13_readyArray_1 : std_logic;
	signal add_13_nReadyArray_0 : std_logic;
	signal add_13_validArray_0 : std_logic;
	signal add_13_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal store_0_clk : std_logic;
	signal store_0_rst : std_logic;
	signal store_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal store_0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal store_0_pValidArray_0 : std_logic;
	signal store_0_pValidArray_1 : std_logic;
	signal store_0_readyArray_0 : std_logic;
	signal store_0_readyArray_1 : std_logic;
	signal store_0_nReadyArray_0 : std_logic;
	signal store_0_validArray_0 : std_logic;
	signal store_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal store_0_nReadyArray_1 : std_logic;
	signal store_0_validArray_1 : std_logic;
	signal store_0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal cst_2_clk : std_logic;
	signal cst_2_rst : std_logic;
	signal cst_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_2_pValidArray_0 : std_logic;
	signal cst_2_readyArray_0 : std_logic;
	signal cst_2_nReadyArray_0 : std_logic;
	signal cst_2_validArray_0 : std_logic;
	signal cst_2_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal add_16_clk : std_logic;
	signal add_16_rst : std_logic;
	signal add_16_dataInArray_0 : std_logic_vector(31 downto 0);
	signal add_16_dataInArray_1 : std_logic_vector(31 downto 0);
	signal add_16_pValidArray_0 : std_logic;
	signal add_16_pValidArray_1 : std_logic;
	signal add_16_readyArray_0 : std_logic;
	signal add_16_readyArray_1 : std_logic;
	signal add_16_nReadyArray_0 : std_logic;
	signal add_16_validArray_0 : std_logic;
	signal add_16_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal icmp_17_clk : std_logic;
	signal icmp_17_rst : std_logic;
	signal icmp_17_dataInArray_0 : std_logic_vector(31 downto 0);
	signal icmp_17_dataInArray_1 : std_logic_vector(31 downto 0);
	signal icmp_17_pValidArray_0 : std_logic;
	signal icmp_17_pValidArray_1 : std_logic;
	signal icmp_17_readyArray_0 : std_logic;
	signal icmp_17_readyArray_1 : std_logic;
	signal icmp_17_nReadyArray_0 : std_logic;
	signal icmp_17_validArray_0 : std_logic;
	signal icmp_17_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal forkC_0_clk : std_logic;
	signal forkC_0_rst : std_logic;
	signal forkC_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_0_pValidArray_0 : std_logic;
	signal forkC_0_readyArray_0 : std_logic;
	signal forkC_0_nReadyArray_0 : std_logic;
	signal forkC_0_validArray_0 : std_logic;
	signal forkC_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal phi_n0_clk : std_logic;
	signal phi_n0_rst : std_logic;
	signal phi_n0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phi_n0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal phi_n0_dataInArray_2 : std_logic_vector(31 downto 0);
	signal phi_n0_pValidArray_0 : std_logic;
	signal phi_n0_pValidArray_1 : std_logic;
	signal phi_n0_pValidArray_2 : std_logic;
	signal phi_n0_readyArray_0 : std_logic;
	signal phi_n0_readyArray_1 : std_logic;
	signal phi_n0_readyArray_2 : std_logic;
	signal phi_n0_nReadyArray_0 : std_logic;
	signal phi_n0_validArray_0 : std_logic;
	signal phi_n0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phiC_1_clk : std_logic;
	signal phiC_1_rst : std_logic;
	signal phiC_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_1_dataInArray_1 : std_logic_vector(0 downto 0);
	signal phiC_1_dataInArray_2 : std_logic_vector(0 downto 0);
	signal phiC_1_pValidArray_0 : std_logic;
	signal phiC_1_pValidArray_1 : std_logic;
	signal phiC_1_pValidArray_2 : std_logic;
	signal phiC_1_readyArray_0 : std_logic;
	signal phiC_1_readyArray_1 : std_logic;
	signal phiC_1_readyArray_2 : std_logic;
	signal phiC_1_nReadyArray_0 : std_logic;
	signal phiC_1_validArray_0 : std_logic;
	signal phiC_1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal branch_0_clk : std_logic;
	signal branch_0_rst : std_logic;
	signal branch_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal branch_0_pValidArray_0 : std_logic;
	signal branch_0_pValidArray_1 : std_logic;
	signal branch_0_readyArray_0 : std_logic;
	signal branch_0_readyArray_1 : std_logic;
	signal branch_0_nReadyArray_0 : std_logic;
	signal branch_0_validArray_0 : std_logic;
	signal branch_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_0_nReadyArray_1 : std_logic;
	signal branch_0_validArray_1 : std_logic;
	signal branch_0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal phi_n3_clk : std_logic;
	signal phi_n3_rst : std_logic;
	signal phi_n3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_n3_dataInArray_1 : std_logic_vector(31 downto 0);
	signal phi_n3_pValidArray_0 : std_logic;
	signal phi_n3_pValidArray_1 : std_logic;
	signal phi_n3_readyArray_0 : std_logic;
	signal phi_n3_readyArray_1 : std_logic;
	signal phi_n3_nReadyArray_0 : std_logic;
	signal phi_n3_validArray_0 : std_logic;
	signal phi_n3_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal branch_4_clk : std_logic;
	signal branch_4_rst : std_logic;
	signal branch_4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_4_dataInArray_1 : std_logic_vector(0 downto 0);
	signal branch_4_pValidArray_0 : std_logic;
	signal branch_4_pValidArray_1 : std_logic;
	signal branch_4_readyArray_0 : std_logic;
	signal branch_4_readyArray_1 : std_logic;
	signal branch_4_nReadyArray_0 : std_logic;
	signal branch_4_validArray_0 : std_logic;
	signal branch_4_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_4_nReadyArray_1 : std_logic;
	signal branch_4_validArray_1 : std_logic;
	signal branch_4_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branchC_7_clk : std_logic;
	signal branchC_7_rst : std_logic;
	signal branchC_7_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_7_dataInArray_1 : std_logic_vector(0 downto 0);
	signal branchC_7_pValidArray_0 : std_logic;
	signal branchC_7_pValidArray_1 : std_logic;
	signal branchC_7_readyArray_0 : std_logic;
	signal branchC_7_readyArray_1 : std_logic;
	signal branchC_7_nReadyArray_0 : std_logic;
	signal branchC_7_validArray_0 : std_logic;
	signal branchC_7_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_7_nReadyArray_1 : std_logic;
	signal branchC_7_validArray_1 : std_logic;
	signal branchC_7_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal fork_2_clk : std_logic;
	signal fork_2_rst : std_logic;
	signal fork_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_2_pValidArray_0 : std_logic;
	signal fork_2_readyArray_0 : std_logic;
	signal fork_2_nReadyArray_0 : std_logic;
	signal fork_2_validArray_0 : std_logic;
	signal fork_2_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_2_nReadyArray_1 : std_logic;
	signal fork_2_validArray_1 : std_logic;
	signal fork_2_dataOutArray_1 : std_logic_vector(31 downto 0);
	signal fork_2_nReadyArray_2 : std_logic;
	signal fork_2_validArray_2 : std_logic;
	signal fork_2_dataOutArray_2 : std_logic_vector(31 downto 0);

	signal fork_3_clk : std_logic;
	signal fork_3_rst : std_logic;
	signal fork_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_3_pValidArray_0 : std_logic;
	signal fork_3_readyArray_0 : std_logic;
	signal fork_3_nReadyArray_0 : std_logic;
	signal fork_3_validArray_0 : std_logic;
	signal fork_3_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_3_nReadyArray_1 : std_logic;
	signal fork_3_validArray_1 : std_logic;
	signal fork_3_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal fork_4_clk : std_logic;
	signal fork_4_rst : std_logic;
	signal fork_4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_4_pValidArray_0 : std_logic;
	signal fork_4_readyArray_0 : std_logic;
	signal fork_4_nReadyArray_0 : std_logic;
	signal fork_4_validArray_0 : std_logic;
	signal fork_4_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_4_nReadyArray_1 : std_logic;
	signal fork_4_validArray_1 : std_logic;
	signal fork_4_dataOutArray_1 : std_logic_vector(31 downto 0);
	signal fork_4_nReadyArray_2 : std_logic;
	signal fork_4_validArray_2 : std_logic;
	signal fork_4_dataOutArray_2 : std_logic_vector(31 downto 0);
	signal fork_4_nReadyArray_3 : std_logic;
	signal fork_4_validArray_3 : std_logic;
	signal fork_4_dataOutArray_3 : std_logic_vector(31 downto 0);

	signal fork_6_clk : std_logic;
	signal fork_6_rst : std_logic;
	signal fork_6_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_6_pValidArray_0 : std_logic;
	signal fork_6_readyArray_0 : std_logic;
	signal fork_6_nReadyArray_0 : std_logic;
	signal fork_6_validArray_0 : std_logic;
	signal fork_6_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_6_nReadyArray_1 : std_logic;
	signal fork_6_validArray_1 : std_logic;
	signal fork_6_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal forkC_7_clk : std_logic;
	signal forkC_7_rst : std_logic;
	signal forkC_7_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_7_pValidArray_0 : std_logic;
	signal forkC_7_readyArray_0 : std_logic;
	signal forkC_7_nReadyArray_0 : std_logic;
	signal forkC_7_validArray_0 : std_logic;
	signal forkC_7_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal forkC_7_nReadyArray_1 : std_logic;
	signal forkC_7_validArray_1 : std_logic;
	signal forkC_7_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal forkC_7_nReadyArray_2 : std_logic;
	signal forkC_7_validArray_2 : std_logic;
	signal forkC_7_dataOutArray_2 : std_logic_vector(0 downto 0);

	signal fork_8_clk : std_logic;
	signal fork_8_rst : std_logic;
	signal fork_8_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_8_pValidArray_0 : std_logic;
	signal fork_8_readyArray_0 : std_logic;
	signal fork_8_nReadyArray_0 : std_logic;
	signal fork_8_validArray_0 : std_logic;
	signal fork_8_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_8_nReadyArray_1 : std_logic;
	signal fork_8_validArray_1 : std_logic;
	signal fork_8_dataOutArray_1 : std_logic_vector(31 downto 0);
	signal fork_8_nReadyArray_2 : std_logic;
	signal fork_8_validArray_2 : std_logic;
	signal fork_8_dataOutArray_2 : std_logic_vector(31 downto 0);

	signal fork_10_clk : std_logic;
	signal fork_10_rst : std_logic;
	signal fork_10_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_10_pValidArray_0 : std_logic;
	signal fork_10_readyArray_0 : std_logic;
	signal fork_10_nReadyArray_0 : std_logic;
	signal fork_10_validArray_0 : std_logic;
	signal fork_10_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_10_nReadyArray_1 : std_logic;
	signal fork_10_validArray_1 : std_logic;
	signal fork_10_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal Buffer_1_clk : std_logic;
	signal Buffer_1_rst : std_logic;
	signal Buffer_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal Buffer_1_pValidArray_0 : std_logic;
	signal Buffer_1_readyArray_0 : std_logic;
	signal Buffer_1_nReadyArray_0 : std_logic;
	signal Buffer_1_validArray_0 : std_logic;
	signal Buffer_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal Buffer_2_clk : std_logic;
	signal Buffer_2_rst : std_logic;
	signal Buffer_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal Buffer_2_pValidArray_0 : std_logic;
	signal Buffer_2_readyArray_0 : std_logic;
	signal Buffer_2_nReadyArray_0 : std_logic;
	signal Buffer_2_validArray_0 : std_logic;
	signal Buffer_2_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal Buffer_3_clk : std_logic;
	signal Buffer_3_rst : std_logic;
	signal Buffer_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal Buffer_3_pValidArray_0 : std_logic;
	signal Buffer_3_readyArray_0 : std_logic;
	signal Buffer_3_nReadyArray_0 : std_logic;
	signal Buffer_3_validArray_0 : std_logic;
	signal Buffer_3_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal Buffer_4_clk : std_logic;
	signal Buffer_4_rst : std_logic;
	signal Buffer_4_dataInArray_0 : std_logic_vector(0 downto 0);
	signal Buffer_4_pValidArray_0 : std_logic;
	signal Buffer_4_readyArray_0 : std_logic;
	signal Buffer_4_nReadyArray_0 : std_logic;
	signal Buffer_4_validArray_0 : std_logic;
	signal Buffer_4_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal phi_19_clk : std_logic;
	signal phi_19_rst : std_logic;
	signal phi_19_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phi_19_dataInArray_1 : std_logic_vector(31 downto 0);
	signal phi_19_dataInArray_2 : std_logic_vector(31 downto 0);
	signal phi_19_pValidArray_0 : std_logic;
	signal phi_19_pValidArray_1 : std_logic;
	signal phi_19_pValidArray_2 : std_logic;
	signal phi_19_readyArray_0 : std_logic;
	signal phi_19_readyArray_1 : std_logic;
	signal phi_19_readyArray_2 : std_logic;
	signal phi_19_nReadyArray_0 : std_logic;
	signal phi_19_validArray_0 : std_logic;
	signal phi_19_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal ret_0_clk : std_logic;
	signal ret_0_rst : std_logic;
	signal ret_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal ret_0_pValidArray_0 : std_logic;
	signal ret_0_readyArray_0 : std_logic;
	signal ret_0_nReadyArray_0 : std_logic;
	signal ret_0_validArray_0 : std_logic;
	signal ret_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal LSQ_hist_clk : std_logic;
	signal LSQ_hist_rst : std_logic;
	signal LSQ_hist_dataInArray_0 : std_logic_vector(0 downto 0);
	signal LSQ_hist_dataInArray_1 : std_logic_vector(31 downto 0);
	signal LSQ_hist_dataInArray_2 : std_logic_vector(31 downto 0);
	signal LSQ_hist_dataInArray_3 : std_logic_vector(31 downto 0);
	signal LSQ_hist_pValidArray_0 : std_logic;
	signal LSQ_hist_pValidArray_1 : std_logic;
	signal LSQ_hist_pValidArray_2 : std_logic;
	signal LSQ_hist_pValidArray_3 : std_logic;
	signal LSQ_hist_readyArray_0 : std_logic;
	signal LSQ_hist_readyArray_1 : std_logic;
	signal LSQ_hist_readyArray_2 : std_logic;
	signal LSQ_hist_readyArray_3 : std_logic;
	signal LSQ_hist_nReadyArray_0 : std_logic;
	signal LSQ_hist_validArray_0 : std_logic;
	signal LSQ_hist_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal LSQ_hist_nReadyArray_1 : std_logic;
	signal LSQ_hist_validArray_1 : std_logic;
	signal LSQ_hist_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal LSQ_hist_io_queueEmpty : std_logic;
	signal LSQ_hist_we0_ce0 : std_logic;
	signal LSQ_hist_address0 : std_logic_vector (31 downto 0);
	signal LSQ_hist_ce0 : std_logic;
	signal LSQ_hist_we0 : std_logic;
	signal LSQ_hist_dout0 : std_logic_vector (31 downto 0);
	signal LSQ_hist_din0 : std_logic_vector (31 downto 0);
	signal LSQ_hist_address1 : std_logic_vector (31 downto 0);
	signal LSQ_hist_ce1 : std_logic;
	signal LSQ_hist_we1 : std_logic;
	signal LSQ_hist_dout1 : std_logic_vector (31 downto 0);
	signal LSQ_hist_din1 : std_logic_vector (31 downto 0);
	signal LSQ_hist_load_ready : std_logic;
	signal LSQ_hist_store_ready : std_logic;

	signal MC_feature_clk : std_logic;
	signal MC_feature_rst : std_logic;
	signal MC_feature_dataInArray_0 : std_logic_vector(31 downto 0);
	signal MC_feature_dataInArray_1 : std_logic_vector(31 downto 0);
	signal MC_feature_dataInArray_2 : std_logic_vector(31 downto 0);
	signal MC_feature_dataInArray_3 : std_logic_vector(31 downto 0);
	signal MC_feature_pValidArray_0 : std_logic;
	signal MC_feature_pValidArray_1 : std_logic;
	signal MC_feature_pValidArray_2 : std_logic;
	signal MC_feature_pValidArray_3 : std_logic;
	signal MC_feature_readyArray_0 : std_logic;
	signal MC_feature_readyArray_1 : std_logic;
	signal MC_feature_readyArray_2 : std_logic;
	signal MC_feature_readyArray_3 : std_logic;
	signal MC_feature_nReadyArray_0 : std_logic;
	signal MC_feature_validArray_0 : std_logic;
	signal MC_feature_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal MC_feature_nReadyArray_1 : std_logic;
	signal MC_feature_validArray_1 : std_logic;
	signal MC_feature_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal MC_feature_we0_ce0 : std_logic;

	signal MC_weight_clk : std_logic;
	signal MC_weight_rst : std_logic;
	signal MC_weight_dataInArray_0 : std_logic_vector(31 downto 0);
	signal MC_weight_dataInArray_1 : std_logic_vector(31 downto 0);
	signal MC_weight_dataInArray_2 : std_logic_vector(31 downto 0);
	signal MC_weight_dataInArray_3 : std_logic_vector(31 downto 0);
	signal MC_weight_pValidArray_0 : std_logic;
	signal MC_weight_pValidArray_1 : std_logic;
	signal MC_weight_pValidArray_2 : std_logic;
	signal MC_weight_pValidArray_3 : std_logic;
	signal MC_weight_readyArray_0 : std_logic;
	signal MC_weight_readyArray_1 : std_logic;
	signal MC_weight_readyArray_2 : std_logic;
	signal MC_weight_readyArray_3 : std_logic;
	signal MC_weight_nReadyArray_0 : std_logic;
	signal MC_weight_validArray_0 : std_logic;
	signal MC_weight_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal MC_weight_nReadyArray_1 : std_logic;
	signal MC_weight_validArray_1 : std_logic;
	signal MC_weight_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal MC_weight_we0_ce0 : std_logic;

	signal sink_1_clk : std_logic;
	signal sink_1_rst : std_logic;
	signal sink_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_1_pValidArray_0 : std_logic;
	signal sink_1_readyArray_0 : std_logic;

	signal sink_2_clk : std_logic;
	signal sink_2_rst : std_logic;
	signal sink_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_2_pValidArray_0 : std_logic;
	signal sink_2_readyArray_0 : std_logic;

	signal sink_3_clk : std_logic;
	signal sink_3_rst : std_logic;
	signal sink_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_3_pValidArray_0 : std_logic;
	signal sink_3_readyArray_0 : std_logic;

	signal sink_4_clk : std_logic;
	signal sink_4_rst : std_logic;
	signal sink_4_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_4_pValidArray_0 : std_logic;
	signal sink_4_readyArray_0 : std_logic;

	signal sink_5_clk : std_logic;
	signal sink_5_rst : std_logic;
	signal sink_5_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_5_pValidArray_0 : std_logic;
	signal sink_5_readyArray_0 : std_logic;

	signal end_0_clk : std_logic;
	signal end_0_rst : std_logic;
	signal end_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal end_0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal end_0_dataInArray_2 : std_logic_vector(0 downto 0);
	signal end_0_dataInArray_3 : std_logic_vector(31 downto 0);
	signal end_0_pValidArray_0 : std_logic;
	signal end_0_pValidArray_1 : std_logic;
	signal end_0_pValidArray_2 : std_logic;
	signal end_0_pValidArray_3 : std_logic;
	signal end_0_readyArray_0 : std_logic;
	signal end_0_readyArray_1 : std_logic;
	signal end_0_readyArray_2 : std_logic;
	signal end_0_readyArray_3 : std_logic;
	signal end_0_nReadyArray_0 : std_logic;
	signal end_0_validArray_0 : std_logic;
	signal end_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal end_0_validArray_1 :  std_logic;
	signal end_0_dataOutArray_1 :  std_logic_vector (31 downto 0);
	signal end_0_nReadyArray_1 :  std_logic;

component LSQ_hist
port(
	clock : in std_logic;
	reset : in std_logic;
	io_memIsReadyForLoads : in std_logic;
	io_memIsReadyForStores : in std_logic;
	io_storeDataOut : out std_logic_vector(31 downto 0);
	io_storeAddrOut : out std_logic_vector(31 downto 0);
	io_storeEnable : out std_logic;
	io_bbpValids_0 : in std_logic;
	io_bbReadyToPrevs_0 : out std_logic;
	io_rdPortsPrev_0_ready : out std_logic;
	io_rdPortsPrev_0_valid : in std_logic;
	io_rdPortsPrev_0_bits : in std_logic_vector(31 downto 0);
	io_wrAddrPorts_0_valid : in std_logic;
	io_wrAddrPorts_0_ready : out std_logic;
	io_wrAddrPorts_0_bits : in std_logic_vector(31 downto 0);
	io_wrDataPorts_0_valid : in std_logic;
	io_wrDataPorts_0_ready : out std_logic;
	io_wrDataPorts_0_bits : in std_logic_vector(31 downto 0);
	io_rdPortsNext_0_ready : in std_logic;
	io_rdPortsNext_0_valid : out std_logic;
	io_rdPortsNext_0_bits : out std_logic_vector(31 downto 0);
	io_Empty_Valid : out std_logic;
	io_loadDataIn : in std_logic_vector(31  downto 0);
	io_loadAddrOut : out std_logic_vector(31  downto 0);
	io_loadEnable : out std_logic
);
end component;

begin


	n_clk <= clk;
	n_rst <= rst;
	n_dataInArray_0 <= n_din;
	n_pValidArray_0 <= start_valid;
	fork_0_pValidArray_0 <= n_validArray_0;
	n_nReadyArray_0 <= fork_0_readyArray_0;
	fork_0_dataInArray_0 <= std_logic_vector (resize(unsigned(n_dataOutArray_0),fork_0_dataInArray_0'length));

	cst_0_clk <= clk;
	cst_0_rst <= rst;
	icmp_0_pValidArray_1 <= cst_0_validArray_0;
	cst_0_nReadyArray_0 <= icmp_0_readyArray_1;
	icmp_0_dataInArray_1 <= std_logic_vector (resize(unsigned(cst_0_dataOutArray_0),icmp_0_dataInArray_1'length));

	icmp_0_clk <= clk;
	icmp_0_rst <= rst;
	fork_1_pValidArray_0 <= icmp_0_validArray_0;
	icmp_0_nReadyArray_0 <= fork_1_readyArray_0;
	fork_1_dataInArray_0 <= std_logic_vector (resize(unsigned(icmp_0_dataOutArray_0),fork_1_dataInArray_0'length));

	cst_3_clk <= clk;
	cst_3_rst <= rst;
	branch_1_pValidArray_0 <= cst_3_validArray_0;
	cst_3_nReadyArray_0 <= branch_1_readyArray_0;
	branch_1_dataInArray_0 <= std_logic_vector (resize(unsigned(cst_3_dataOutArray_0),branch_1_dataInArray_0'length));

	start_0_clk <= clk;
	start_0_rst <= rst;
	start_0_pValidArray_0 <= start_valid;
	start_ready <= start_0_readyArray_0;
	forkC_5_pValidArray_0 <= start_0_validArray_0;
	start_0_nReadyArray_0 <= forkC_5_readyArray_0;
	forkC_5_dataInArray_0 <= std_logic_vector (resize(unsigned(start_0_dataOutArray_0),forkC_5_dataInArray_0'length));

	cst_4_clk <= clk;
	cst_4_rst <= rst;
	phi_n3_pValidArray_0 <= cst_4_validArray_0;
	cst_4_nReadyArray_0 <= phi_n3_readyArray_0;
	phi_n3_dataInArray_0 <= std_logic_vector (resize(unsigned(cst_4_dataOutArray_0),phi_n3_dataInArray_0'length));

	branch_1_clk <= clk;
	branch_1_rst <= rst;
	sink_1_pValidArray_0 <= branch_1_validArray_0;
	branch_1_nReadyArray_0 <= sink_1_readyArray_0;
	sink_1_dataInArray_0 <= std_logic_vector (resize(unsigned(branch_1_dataOutArray_0),sink_1_dataInArray_0'length));
	phi_19_pValidArray_1 <= branch_1_validArray_1;
	branch_1_nReadyArray_1 <= phi_19_readyArray_1;
	phi_19_dataInArray_1 <= std_logic_vector (resize(unsigned(branch_1_dataOutArray_1),phi_19_dataInArray_1'length));

	branch_3_clk <= clk;
	branch_3_rst <= rst;
	sink_2_pValidArray_0 <= branch_3_validArray_0;
	branch_3_nReadyArray_0 <= sink_2_readyArray_0;
	sink_2_dataInArray_0 <= std_logic_vector (resize(unsigned(branch_3_dataOutArray_0),sink_2_dataInArray_0'length));
	phi_n0_pValidArray_2 <= branch_3_validArray_1;
	branch_3_nReadyArray_1 <= phi_n0_readyArray_2;
	phi_n0_dataInArray_2 <= std_logic_vector (resize(unsigned(branch_3_dataOutArray_1),phi_n0_dataInArray_2'length));

	branchC_5_clk <= clk;
	branchC_5_rst <= rst;
	sink_4_pValidArray_0 <= branchC_5_validArray_0;
	branchC_5_nReadyArray_0 <= sink_4_readyArray_0;
	sink_4_dataInArray_0 <= std_logic_vector (resize(unsigned(branchC_5_dataOutArray_0),sink_4_dataInArray_0'length));
	forkC_9_pValidArray_0 <= branchC_5_validArray_1;
	branchC_5_nReadyArray_1 <= forkC_9_readyArray_0;
	forkC_9_dataInArray_0 <= std_logic_vector (resize(unsigned(branchC_5_dataOutArray_1),forkC_9_dataInArray_0'length));

	fork_0_clk <= clk;
	fork_0_rst <= rst;
	icmp_0_pValidArray_0 <= fork_0_validArray_0;
	fork_0_nReadyArray_0 <= icmp_0_readyArray_0;
	icmp_0_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_0_dataOutArray_0),icmp_0_dataInArray_0'length));
	branch_3_pValidArray_0 <= fork_0_validArray_1;
	fork_0_nReadyArray_1 <= branch_3_readyArray_0;
	branch_3_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_0_dataOutArray_1),branch_3_dataInArray_0'length));

	fork_1_clk <= clk;
	fork_1_rst <= rst;
	branch_1_pValidArray_1 <= fork_1_validArray_0;
	fork_1_nReadyArray_0 <= branch_1_readyArray_1;
	branch_1_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_1_dataOutArray_0),branch_1_dataInArray_1'length));
	branch_3_pValidArray_1 <= fork_1_validArray_1;
	fork_1_nReadyArray_1 <= branch_3_readyArray_1;
	branch_3_dataInArray_1 <= not std_logic_vector (resize(unsigned(fork_1_dataOutArray_1),branch_3_dataInArray_1'length));
	branchC_5_pValidArray_1 <= fork_1_validArray_2;
	fork_1_nReadyArray_2 <= branchC_5_readyArray_1;
	branchC_5_dataInArray_1 <= not std_logic_vector (resize(unsigned(fork_1_dataOutArray_2),branchC_5_dataInArray_1'length));
	phi_19_pValidArray_0 <= fork_1_validArray_3;
	fork_1_nReadyArray_3 <= phi_19_readyArray_0;
	phi_19_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_1_dataOutArray_3),phi_19_dataInArray_0'length));

	forkC_5_clk <= clk;
	forkC_5_rst <= rst;
	cst_0_pValidArray_0 <= forkC_5_validArray_0;
	forkC_5_nReadyArray_0 <= cst_0_readyArray_0;
	cst_0_dataInArray_0 <= "00000000000000000000000000000000";
	branchC_5_pValidArray_0 <= forkC_5_validArray_1;
	forkC_5_nReadyArray_1 <= branchC_5_readyArray_0;
	branchC_5_dataInArray_0 <= std_logic_vector (resize(unsigned(forkC_5_dataOutArray_1),branchC_5_dataInArray_0'length));
	cst_3_pValidArray_0 <= forkC_5_validArray_2;
	forkC_5_nReadyArray_2 <= cst_3_readyArray_0;
	cst_3_dataInArray_0 <= "00000000000000000000000000000000";
	cst_4_pValidArray_0 <= forkC_5_validArray_3;
	forkC_5_nReadyArray_3 <= cst_4_readyArray_0;
	cst_4_dataInArray_0 <= "00000000000000000000000000000001";

	cst_1_clk <= clk;
	cst_1_rst <= rst;
	phi_3_pValidArray_2 <= cst_1_validArray_0;
	cst_1_nReadyArray_0 <= phi_3_readyArray_2;
	phi_3_dataInArray_2 <= std_logic_vector (resize(unsigned(cst_1_dataOutArray_0),phi_3_dataInArray_2'length));

	forkC_9_clk <= clk;
	forkC_9_rst <= rst;
	cst_1_pValidArray_0 <= forkC_9_validArray_0;
	forkC_9_nReadyArray_0 <= cst_1_readyArray_0;
	cst_1_dataInArray_0 <= "00000000000000000000000000000000";
	phiC_1_pValidArray_2 <= forkC_9_validArray_1;
	forkC_9_nReadyArray_1 <= phiC_1_readyArray_2;
	phiC_1_dataInArray_2 <= std_logic_vector (resize(unsigned(forkC_9_dataOutArray_1),phiC_1_dataInArray_2'length));

	phi_3_clk <= clk;
	phi_3_rst <= rst;
	Buffer_1_pValidArray_0 <= phi_3_validArray_0;
	phi_3_nReadyArray_0 <= Buffer_1_readyArray_0;
	Buffer_1_dataInArray_0 <= std_logic_vector (resize(unsigned(phi_3_dataOutArray_0),Buffer_1_dataInArray_0'length));

	load_6_clk <= clk;
	load_6_rst <= rst;
	fork_10_pValidArray_0 <= load_6_validArray_0;
	load_6_nReadyArray_0 <= fork_10_readyArray_0;
	fork_10_dataInArray_0 <= std_logic_vector (resize(unsigned(load_6_dataOutArray_0),fork_10_dataInArray_0'length));
	MC_feature_pValidArray_0 <= load_6_validArray_1;
	load_6_nReadyArray_1 <= MC_feature_readyArray_0;
	MC_feature_dataInArray_0 <= std_logic_vector (resize(unsigned(load_6_dataOutArray_1),MC_feature_dataInArray_0'length));

	load_9_clk <= clk;
	load_9_rst <= rst;
	Buffer_2_pValidArray_0 <= load_9_validArray_0;
	load_9_nReadyArray_0 <= Buffer_2_readyArray_0;
	Buffer_2_dataInArray_0 <= std_logic_vector (resize(unsigned(load_9_dataOutArray_0),Buffer_2_dataInArray_0'length));
	MC_weight_pValidArray_0 <= load_9_validArray_1;
	load_9_nReadyArray_1 <= MC_weight_readyArray_0;
	MC_weight_dataInArray_0 <= std_logic_vector (resize(unsigned(load_9_dataOutArray_1),MC_weight_dataInArray_0'length));

	load_12_clk <= clk;
	load_12_rst <= rst;
	add_13_pValidArray_0 <= load_12_validArray_0;
	load_12_nReadyArray_0 <= add_13_readyArray_0;
	add_13_dataInArray_0 <= std_logic_vector (resize(unsigned(load_12_dataOutArray_0),add_13_dataInArray_0'length));
	LSQ_hist_pValidArray_1 <= load_12_validArray_1;
	load_12_nReadyArray_1 <= LSQ_hist_readyArray_1;
	LSQ_hist_dataInArray_1 <= std_logic_vector (resize(unsigned(load_12_dataOutArray_1),LSQ_hist_dataInArray_1'length));

	add_13_clk <= clk;
	add_13_rst <= rst;
	store_0_pValidArray_0 <= add_13_validArray_0;
	add_13_nReadyArray_0 <= store_0_readyArray_0;
	store_0_dataInArray_0 <= std_logic_vector (resize(unsigned(add_13_dataOutArray_0),store_0_dataInArray_0'length));

	store_0_clk <= clk;
	store_0_rst <= rst;
	LSQ_hist_pValidArray_3 <= store_0_validArray_0;
	store_0_nReadyArray_0 <= LSQ_hist_readyArray_3;
	LSQ_hist_dataInArray_3 <= std_logic_vector (resize(unsigned(store_0_dataOutArray_0),LSQ_hist_dataInArray_3'length));
	LSQ_hist_pValidArray_2 <= store_0_validArray_1;
	store_0_nReadyArray_1 <= LSQ_hist_readyArray_2;
	LSQ_hist_dataInArray_2 <= std_logic_vector (resize(unsigned(store_0_dataOutArray_1),LSQ_hist_dataInArray_2'length));

	cst_2_clk <= clk;
	cst_2_rst <= rst;
	add_16_pValidArray_1 <= cst_2_validArray_0;
	cst_2_nReadyArray_0 <= add_16_readyArray_1;
	add_16_dataInArray_1 <= std_logic_vector (resize(unsigned(cst_2_dataOutArray_0),add_16_dataInArray_1'length));

	add_16_clk <= clk;
	add_16_rst <= rst;
	fork_3_pValidArray_0 <= add_16_validArray_0;
	add_16_nReadyArray_0 <= fork_3_readyArray_0;
	fork_3_dataInArray_0 <= std_logic_vector (resize(unsigned(add_16_dataOutArray_0),fork_3_dataInArray_0'length));

	icmp_17_clk <= clk;
	icmp_17_rst <= rst;
	fork_4_pValidArray_0 <= icmp_17_validArray_0;
	icmp_17_nReadyArray_0 <= fork_4_readyArray_0;
	fork_4_dataInArray_0 <= std_logic_vector (resize(unsigned(icmp_17_dataOutArray_0),fork_4_dataInArray_0'length));

	forkC_0_clk <= clk;
	forkC_0_rst <= rst;
	LSQ_hist_pValidArray_0 <= forkC_0_validArray_0;
	forkC_0_nReadyArray_0 <= LSQ_hist_readyArray_0;
	LSQ_hist_dataInArray_0 <= std_logic_vector (resize(unsigned(forkC_0_dataOutArray_0),LSQ_hist_dataInArray_0'length));

	phi_n0_clk <= clk;
	phi_n0_rst <= rst;
	Buffer_3_pValidArray_0 <= phi_n0_validArray_0;
	phi_n0_nReadyArray_0 <= Buffer_3_readyArray_0;
	Buffer_3_dataInArray_0 <= std_logic_vector (resize(unsigned(phi_n0_dataOutArray_0),Buffer_3_dataInArray_0'length));

	phiC_1_clk <= clk;
	phiC_1_rst <= rst;
	Buffer_4_pValidArray_0 <= phiC_1_validArray_0;
	phiC_1_nReadyArray_0 <= Buffer_4_readyArray_0;
	Buffer_4_dataInArray_0 <= std_logic_vector (resize(unsigned(phiC_1_dataOutArray_0),Buffer_4_dataInArray_0'length));

	branch_0_clk <= clk;
	branch_0_rst <= rst;
	phi_19_pValidArray_2 <= branch_0_validArray_0;
	branch_0_nReadyArray_0 <= phi_19_readyArray_2;
	phi_19_dataInArray_2 <= std_logic_vector (resize(unsigned(branch_0_dataOutArray_0),phi_19_dataInArray_2'length));
	phi_3_pValidArray_1 <= branch_0_validArray_1;
	branch_0_nReadyArray_1 <= phi_3_readyArray_1;
	phi_3_dataInArray_1 <= std_logic_vector (resize(unsigned(branch_0_dataOutArray_1),phi_3_dataInArray_1'length));

	phi_n3_clk <= clk;
	phi_n3_rst <= rst;
	fork_8_pValidArray_0 <= phi_n3_validArray_0;
	phi_n3_nReadyArray_0 <= fork_8_readyArray_0;
	fork_8_dataInArray_0 <= std_logic_vector (resize(unsigned(phi_n3_dataOutArray_0),fork_8_dataInArray_0'length));

	branch_4_clk <= clk;
	branch_4_rst <= rst;
	sink_3_pValidArray_0 <= branch_4_validArray_0;
	branch_4_nReadyArray_0 <= sink_3_readyArray_0;
	sink_3_dataInArray_0 <= std_logic_vector (resize(unsigned(branch_4_dataOutArray_0),sink_3_dataInArray_0'length));
	phi_n0_pValidArray_1 <= branch_4_validArray_1;
	branch_4_nReadyArray_1 <= phi_n0_readyArray_1;
	phi_n0_dataInArray_1 <= std_logic_vector (resize(unsigned(branch_4_dataOutArray_1),phi_n0_dataInArray_1'length));

	branchC_7_clk <= clk;
	branchC_7_rst <= rst;
	sink_5_pValidArray_0 <= branchC_7_validArray_0;
	branchC_7_nReadyArray_0 <= sink_5_readyArray_0;
	sink_5_dataInArray_0 <= std_logic_vector (resize(unsigned(branchC_7_dataOutArray_0),sink_5_dataInArray_0'length));
	phiC_1_pValidArray_1 <= branchC_7_validArray_1;
	branchC_7_nReadyArray_1 <= phiC_1_readyArray_1;
	phiC_1_dataInArray_1 <= std_logic_vector (resize(unsigned(branchC_7_dataOutArray_1),phiC_1_dataInArray_1'length));

	fork_2_clk <= clk;
	fork_2_rst <= rst;
	add_16_pValidArray_0 <= fork_2_validArray_0;
	fork_2_nReadyArray_0 <= add_16_readyArray_0;
	add_16_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_2_dataOutArray_0),add_16_dataInArray_0'length));
	load_6_pValidArray_1 <= fork_2_validArray_1;
	fork_2_nReadyArray_1 <= load_6_readyArray_1;
	load_6_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_2_dataOutArray_1),load_6_dataInArray_1'length));
	load_9_pValidArray_1 <= fork_2_validArray_2;
	fork_2_nReadyArray_2 <= load_9_readyArray_1;
	load_9_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_2_dataOutArray_2),load_9_dataInArray_1'length));

	fork_3_clk <= clk;
	fork_3_rst <= rst;
	icmp_17_pValidArray_0 <= fork_3_validArray_0;
	fork_3_nReadyArray_0 <= icmp_17_readyArray_0;
	icmp_17_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_3_dataOutArray_0),icmp_17_dataInArray_0'length));
	branch_0_pValidArray_0 <= fork_3_validArray_1;
	fork_3_nReadyArray_1 <= branch_0_readyArray_0;
	branch_0_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_3_dataOutArray_1),branch_0_dataInArray_0'length));

	fork_4_clk <= clk;
	fork_4_rst <= rst;
	branch_0_pValidArray_1 <= fork_4_validArray_0;
	fork_4_nReadyArray_0 <= branch_0_readyArray_1;
	branch_0_dataInArray_1 <= not std_logic_vector (resize(unsigned(fork_4_dataOutArray_0),branch_0_dataInArray_1'length));
	phi_n3_pValidArray_1 <= fork_4_validArray_1;
	fork_4_nReadyArray_1 <= phi_n3_readyArray_1;
	phi_n3_dataInArray_1 <= not std_logic_vector (resize(unsigned(fork_4_dataOutArray_1),phi_n3_dataInArray_1'length));
	branch_4_pValidArray_1 <= fork_4_validArray_2;
	fork_4_nReadyArray_2 <= branch_4_readyArray_1;
	branch_4_dataInArray_1 <= not std_logic_vector (resize(unsigned(fork_4_dataOutArray_2),branch_4_dataInArray_1'length));
	branchC_7_pValidArray_1 <= fork_4_validArray_3;
	fork_4_nReadyArray_3 <= branchC_7_readyArray_1;
	branchC_7_dataInArray_1 <= not std_logic_vector (resize(unsigned(fork_4_dataOutArray_3),branchC_7_dataInArray_1'length));

	fork_6_clk <= clk;
	fork_6_rst <= rst;
	icmp_17_pValidArray_1 <= fork_6_validArray_0;
	fork_6_nReadyArray_0 <= icmp_17_readyArray_1;
	icmp_17_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_6_dataOutArray_0),icmp_17_dataInArray_1'length));
	branch_4_pValidArray_0 <= fork_6_validArray_1;
	fork_6_nReadyArray_1 <= branch_4_readyArray_0;
	branch_4_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_6_dataOutArray_1),branch_4_dataInArray_0'length));

	forkC_7_clk <= clk;
	forkC_7_rst <= rst;
	cst_2_pValidArray_0 <= forkC_7_validArray_0;
	forkC_7_nReadyArray_0 <= cst_2_readyArray_0;
	cst_2_dataInArray_0 <= "00000000000000000000000000000001";
	branchC_7_pValidArray_0 <= forkC_7_validArray_1;
	forkC_7_nReadyArray_1 <= branchC_7_readyArray_0;
	branchC_7_dataInArray_0 <= std_logic_vector (resize(unsigned(forkC_7_dataOutArray_1),branchC_7_dataInArray_0'length));
	forkC_0_pValidArray_0 <= forkC_7_validArray_2;
	forkC_7_nReadyArray_2 <= forkC_0_readyArray_0;
	forkC_0_dataInArray_0 <= std_logic_vector (resize(unsigned(forkC_7_dataOutArray_2),forkC_0_dataInArray_0'length));

	fork_8_clk <= clk;
	fork_8_rst <= rst;
	phi_3_pValidArray_0 <= fork_8_validArray_0;
	fork_8_nReadyArray_0 <= phi_3_readyArray_0;
	phi_3_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_8_dataOutArray_0),phi_3_dataInArray_0'length));
	phi_n0_pValidArray_0 <= fork_8_validArray_1;
	fork_8_nReadyArray_1 <= phi_n0_readyArray_0;
	phi_n0_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_8_dataOutArray_1),phi_n0_dataInArray_0'length));
	phiC_1_pValidArray_0 <= fork_8_validArray_2;
	fork_8_nReadyArray_2 <= phiC_1_readyArray_0;
	phiC_1_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_8_dataOutArray_2),phiC_1_dataInArray_0'length));

	fork_10_clk <= clk;
	fork_10_rst <= rst;
	load_12_pValidArray_1 <= fork_10_validArray_0;
	fork_10_nReadyArray_0 <= load_12_readyArray_1;
	load_12_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_10_dataOutArray_0),load_12_dataInArray_1'length));
	store_0_pValidArray_1 <= fork_10_validArray_1;
	fork_10_nReadyArray_1 <= store_0_readyArray_1;
	store_0_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_10_dataOutArray_1),store_0_dataInArray_1'length));

	Buffer_1_clk <= clk;
	Buffer_1_rst <= rst;
	fork_2_pValidArray_0 <= Buffer_1_validArray_0;
	Buffer_1_nReadyArray_0 <= fork_2_readyArray_0;
	fork_2_dataInArray_0 <= std_logic_vector (resize(unsigned(Buffer_1_dataOutArray_0),fork_2_dataInArray_0'length));

	Buffer_2_clk <= clk;
	Buffer_2_rst <= rst;
	add_13_pValidArray_1 <= Buffer_2_validArray_0;
	Buffer_2_nReadyArray_0 <= add_13_readyArray_1;
	add_13_dataInArray_1 <= std_logic_vector (resize(unsigned(Buffer_2_dataOutArray_0),add_13_dataInArray_1'length));

	Buffer_3_clk <= clk;
	Buffer_3_rst <= rst;
	fork_6_pValidArray_0 <= Buffer_3_validArray_0;
	Buffer_3_nReadyArray_0 <= fork_6_readyArray_0;
	fork_6_dataInArray_0 <= std_logic_vector (resize(unsigned(Buffer_3_dataOutArray_0),fork_6_dataInArray_0'length));

	Buffer_4_clk <= clk;
	Buffer_4_rst <= rst;
	forkC_7_pValidArray_0 <= Buffer_4_validArray_0;
	Buffer_4_nReadyArray_0 <= forkC_7_readyArray_0;
	forkC_7_dataInArray_0 <= std_logic_vector (resize(unsigned(Buffer_4_dataOutArray_0),forkC_7_dataInArray_0'length));

	phi_19_clk <= clk;
	phi_19_rst <= rst;
	ret_0_pValidArray_0 <= phi_19_validArray_0;
	phi_19_nReadyArray_0 <= ret_0_readyArray_0;
	ret_0_dataInArray_0 <= std_logic_vector (resize(unsigned(phi_19_dataOutArray_0),ret_0_dataInArray_0'length));

	ret_0_clk <= clk;
	ret_0_rst <= rst;
	end_0_pValidArray_3 <= ret_0_validArray_0;
	ret_0_nReadyArray_0 <= end_0_readyArray_3;
	end_0_dataInArray_3 <= std_logic_vector (resize(unsigned(ret_0_dataOutArray_0),end_0_dataInArray_3'length));

	LSQ_hist_clk <= clk;
	LSQ_hist_rst <= rst;
	LSQ_hist_din1 <= hist_din1;
	LSQ_hist_store_ready <= '1';
	LSQ_hist_load_ready <= '1';
	hist_address1 <= std_logic_vector (resize(unsigned(LSQ_hist_address1),hist_address1'length));
	hist_ce1 <= LSQ_hist_ce1;
	hist_address0 <= std_logic_vector (resize(unsigned(LSQ_hist_address0),hist_address0'length));
	hist_ce0 <= LSQ_hist_we0_ce0;
	hist_we0 <= LSQ_hist_we0_ce0;
	hist_dout0 <= LSQ_hist_dout0;
	load_12_pValidArray_0 <= LSQ_hist_validArray_0;
	LSQ_hist_nReadyArray_0 <= load_12_readyArray_0;
	load_12_dataInArray_0 <= std_logic_vector (resize(unsigned(LSQ_hist_dataOutArray_0),load_12_dataInArray_0'length));
	end_0_pValidArray_0 <= LSQ_hist_validArray_1;
	LSQ_hist_nReadyArray_1 <= end_0_readyArray_0;
	end_0_dataInArray_0 <= std_logic_vector (resize(unsigned(LSQ_hist_dataOutArray_1),end_0_dataInArray_0'length));

	MC_feature_clk <= clk;
	MC_feature_rst <= rst;
	feature_ce0 <= MC_feature_we0_ce0;
	feature_we0 <= MC_feature_we0_ce0;
	load_6_pValidArray_0 <= MC_feature_validArray_0;
	MC_feature_nReadyArray_0 <= load_6_readyArray_0;
	load_6_dataInArray_0 <= std_logic_vector (resize(unsigned(MC_feature_dataOutArray_0),load_6_dataInArray_0'length));
	end_0_pValidArray_1 <= MC_feature_validArray_1;
	MC_feature_nReadyArray_1 <= end_0_readyArray_1;
	end_0_dataInArray_1 <= std_logic_vector (resize(unsigned(MC_feature_dataOutArray_1),end_0_dataInArray_1'length));

	MC_weight_clk <= clk;
	MC_weight_rst <= rst;
	weight_ce0 <= MC_weight_we0_ce0;
	weight_we0 <= MC_weight_we0_ce0;
	load_9_pValidArray_0 <= MC_weight_validArray_0;
	MC_weight_nReadyArray_0 <= load_9_readyArray_0;
	load_9_dataInArray_0 <= std_logic_vector (resize(unsigned(MC_weight_dataOutArray_0),load_9_dataInArray_0'length));
	end_0_pValidArray_2 <= MC_weight_validArray_1;
	MC_weight_nReadyArray_1 <= end_0_readyArray_2;
	end_0_dataInArray_2 <= std_logic_vector (resize(unsigned(MC_weight_dataOutArray_1),end_0_dataInArray_2'length));

	sink_1_clk <= clk;
	sink_1_rst <= rst;

	sink_2_clk <= clk;
	sink_2_rst <= rst;

	sink_3_clk <= clk;
	sink_3_rst <= rst;

	sink_4_clk <= clk;
	sink_4_rst <= rst;

	sink_5_clk <= clk;
	sink_5_rst <= rst;

	end_0_clk <= clk;
	end_0_rst <= rst;
	end_valid <= end_0_validArray_0;
	end_out <= end_0_dataOutArray_0;
	end_0_nReadyArray_0 <= end_ready;

n: entity work.start_node(arch) generic map (1,1,32,32)
port map (
	clk => n_clk,
	rst => n_rst,
	dataInArray(0) => n_dataInArray_0,
	pValidArray(0) => n_pValidArray_0,
	readyArray(0) => n_readyArray_0,
	nReadyArray(0) => n_nReadyArray_0,
	validArray(0) => n_validArray_0,
	dataOutArray(0) => n_dataOutArray_0
);

cst_0: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_0_clk,
	rst => cst_0_rst,
	dataInArray(0) => cst_0_dataInArray_0,
	pValidArray(0) => cst_0_pValidArray_0,
	readyArray(0) => cst_0_readyArray_0,
	nReadyArray(0) => cst_0_nReadyArray_0,
	validArray(0) => cst_0_validArray_0,
	dataOutArray(0) => cst_0_dataOutArray_0
);

icmp_0: entity work.icmp_sgt_op(arch) generic map (2,1,32,1)
port map (
	clk => icmp_0_clk,
	rst => icmp_0_rst,
	dataInArray(0) => icmp_0_dataInArray_0,
	dataInArray(1) => icmp_0_dataInArray_1,
	pValidArray(0) => icmp_0_pValidArray_0,
	pValidArray(1) => icmp_0_pValidArray_1,
	readyArray(0) => icmp_0_readyArray_0,
	readyArray(1) => icmp_0_readyArray_1,
	nReadyArray(0) => icmp_0_nReadyArray_0,
	validArray(0) => icmp_0_validArray_0,
	dataOutArray(0) => icmp_0_dataOutArray_0
);

cst_3: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_3_clk,
	rst => cst_3_rst,
	dataInArray(0) => cst_3_dataInArray_0,
	pValidArray(0) => cst_3_pValidArray_0,
	readyArray(0) => cst_3_readyArray_0,
	nReadyArray(0) => cst_3_nReadyArray_0,
	validArray(0) => cst_3_validArray_0,
	dataOutArray(0) => cst_3_dataOutArray_0
);

start_0: entity work.start_node(arch) generic map (1,1,1,1)
port map (
	clk => start_0_clk,
	rst => start_0_rst,
	dataInArray(0) => start_0_dataInArray_0,
	pValidArray(0) => start_0_pValidArray_0,
	readyArray(0) => start_0_readyArray_0,
	nReadyArray(0) => start_0_nReadyArray_0,
	validArray(0) => start_0_validArray_0,
	dataOutArray(0) => start_0_dataOutArray_0
);

cst_4: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_4_clk,
	rst => cst_4_rst,
	dataInArray(0) => cst_4_dataInArray_0,
	pValidArray(0) => cst_4_pValidArray_0,
	readyArray(0) => cst_4_readyArray_0,
	nReadyArray(0) => cst_4_nReadyArray_0,
	validArray(0) => cst_4_validArray_0,
	dataOutArray(0) => cst_4_dataOutArray_0
);

branch_1: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_1_clk,
	rst => branch_1_rst,
	dataInArray(0) => branch_1_dataInArray_0,
	Condition(0) => branch_1_dataInArray_1,
	pValidArray(0) => branch_1_pValidArray_0,
	pValidArray(1) => branch_1_pValidArray_1,
	readyArray(0) => branch_1_readyArray_0,
	readyArray(1) => branch_1_readyArray_1,
	nReadyArray(0) => branch_1_nReadyArray_0,
	nReadyArray(1) => branch_1_nReadyArray_1,
	validArray(0) => branch_1_validArray_0,
	validArray(1) => branch_1_validArray_1,
	dataOutArray(0) => branch_1_dataOutArray_0,
	dataOutArray(1) => branch_1_dataOutArray_1
);

branch_3: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_3_clk,
	rst => branch_3_rst,
	dataInArray(0) => branch_3_dataInArray_0,
	Condition(0) => branch_3_dataInArray_1,
	pValidArray(0) => branch_3_pValidArray_0,
	pValidArray(1) => branch_3_pValidArray_1,
	readyArray(0) => branch_3_readyArray_0,
	readyArray(1) => branch_3_readyArray_1,
	nReadyArray(0) => branch_3_nReadyArray_0,
	nReadyArray(1) => branch_3_nReadyArray_1,
	validArray(0) => branch_3_validArray_0,
	validArray(1) => branch_3_validArray_1,
	dataOutArray(0) => branch_3_dataOutArray_0,
	dataOutArray(1) => branch_3_dataOutArray_1
);

branchC_5: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_5_clk,
	rst => branchC_5_rst,
	dataInArray(0) => branchC_5_dataInArray_0,
	Condition(0) => branchC_5_dataInArray_1,
	pValidArray(0) => branchC_5_pValidArray_0,
	pValidArray(1) => branchC_5_pValidArray_1,
	readyArray(0) => branchC_5_readyArray_0,
	readyArray(1) => branchC_5_readyArray_1,
	nReadyArray(0) => branchC_5_nReadyArray_0,
	nReadyArray(1) => branchC_5_nReadyArray_1,
	validArray(0) => branchC_5_validArray_0,
	validArray(1) => branchC_5_validArray_1,
	dataOutArray(0) => branchC_5_dataOutArray_0,
	dataOutArray(1) => branchC_5_dataOutArray_1
);

fork_0: entity work.fork(arch) generic map (1,2,32,32)
port map (
	clk => fork_0_clk,
	rst => fork_0_rst,
	dataInArray(0) => fork_0_dataInArray_0,
	pValidArray(0) => fork_0_pValidArray_0,
	readyArray(0) => fork_0_readyArray_0,
	nReadyArray(0) => fork_0_nReadyArray_0,
	nReadyArray(1) => fork_0_nReadyArray_1,
	validArray(0) => fork_0_validArray_0,
	validArray(1) => fork_0_validArray_1,
	dataOutArray(0) => fork_0_dataOutArray_0,
	dataOutArray(1) => fork_0_dataOutArray_1
);

fork_1: entity work.fork(arch) generic map (1,4,32,32)
port map (
	clk => fork_1_clk,
	rst => fork_1_rst,
	dataInArray(0) => fork_1_dataInArray_0,
	pValidArray(0) => fork_1_pValidArray_0,
	readyArray(0) => fork_1_readyArray_0,
	nReadyArray(0) => fork_1_nReadyArray_0,
	nReadyArray(1) => fork_1_nReadyArray_1,
	nReadyArray(2) => fork_1_nReadyArray_2,
	nReadyArray(3) => fork_1_nReadyArray_3,
	validArray(0) => fork_1_validArray_0,
	validArray(1) => fork_1_validArray_1,
	validArray(2) => fork_1_validArray_2,
	validArray(3) => fork_1_validArray_3,
	dataOutArray(0) => fork_1_dataOutArray_0,
	dataOutArray(1) => fork_1_dataOutArray_1,
	dataOutArray(2) => fork_1_dataOutArray_2,
	dataOutArray(3) => fork_1_dataOutArray_3
);

forkC_5: entity work.fork(arch) generic map (1,4,1,1)
port map (
	clk => forkC_5_clk,
	rst => forkC_5_rst,
	dataInArray(0) => forkC_5_dataInArray_0,
	pValidArray(0) => forkC_5_pValidArray_0,
	readyArray(0) => forkC_5_readyArray_0,
	nReadyArray(0) => forkC_5_nReadyArray_0,
	nReadyArray(1) => forkC_5_nReadyArray_1,
	nReadyArray(2) => forkC_5_nReadyArray_2,
	nReadyArray(3) => forkC_5_nReadyArray_3,
	validArray(0) => forkC_5_validArray_0,
	validArray(1) => forkC_5_validArray_1,
	validArray(2) => forkC_5_validArray_2,
	validArray(3) => forkC_5_validArray_3,
	dataOutArray(0) => forkC_5_dataOutArray_0,
	dataOutArray(1) => forkC_5_dataOutArray_1,
	dataOutArray(2) => forkC_5_dataOutArray_2,
	dataOutArray(3) => forkC_5_dataOutArray_3
);

cst_1: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_1_clk,
	rst => cst_1_rst,
	dataInArray(0) => cst_1_dataInArray_0,
	pValidArray(0) => cst_1_pValidArray_0,
	readyArray(0) => cst_1_readyArray_0,
	nReadyArray(0) => cst_1_nReadyArray_0,
	validArray(0) => cst_1_validArray_0,
	dataOutArray(0) => cst_1_dataOutArray_0
);

forkC_9: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => forkC_9_clk,
	rst => forkC_9_rst,
	dataInArray(0) => forkC_9_dataInArray_0,
	pValidArray(0) => forkC_9_pValidArray_0,
	readyArray(0) => forkC_9_readyArray_0,
	nReadyArray(0) => forkC_9_nReadyArray_0,
	nReadyArray(1) => forkC_9_nReadyArray_1,
	validArray(0) => forkC_9_validArray_0,
	validArray(1) => forkC_9_validArray_1,
	dataOutArray(0) => forkC_9_dataOutArray_0,
	dataOutArray(1) => forkC_9_dataOutArray_1
);

phi_3: entity work.Mux(arch) generic map (3,1,32,32,1)
port map (
	clk => phi_3_clk,
	rst => phi_3_rst,
	Condition(0) => phi_3_dataInArray_0,
	dataInArray(0) => phi_3_dataInArray_1,
	dataInArray(1) => phi_3_dataInArray_2,
	pValidArray(0) => phi_3_pValidArray_0,
	pValidArray(1) => phi_3_pValidArray_1,
	pValidArray(2) => phi_3_pValidArray_2,
	readyArray(0) => phi_3_readyArray_0,
	readyArray(1) => phi_3_readyArray_1,
	readyArray(2) => phi_3_readyArray_2,
	nReadyArray(0) => phi_3_nReadyArray_0,
	validArray(0) => phi_3_validArray_0,
	dataOutArray(0) => phi_3_dataOutArray_0
);

load_6: entity work.mc_load_op(arch) generic map (2,2,32,32)
port map (
	clk => load_6_clk,
	rst => load_6_rst,
	dataInArray(0) => load_6_dataInArray_0,
	input_addr => load_6_dataInArray_1,
	pValidArray(0) => load_6_pValidArray_0,
	pValidArray(1) => load_6_pValidArray_1,
	readyArray(0) => load_6_readyArray_0,
	readyArray(1) => load_6_readyArray_1,
	nReadyArray(0) => load_6_nReadyArray_0,
	nReadyArray(1) => load_6_nReadyArray_1,
	validArray(0) => load_6_validArray_0,
	validArray(1) => load_6_validArray_1,
	dataOutArray(0) => load_6_dataOutArray_0,
	output_addr => load_6_dataOutArray_1
);

load_9: entity work.mc_load_op(arch) generic map (2,2,32,32)
port map (
	clk => load_9_clk,
	rst => load_9_rst,
	dataInArray(0) => load_9_dataInArray_0,
	input_addr => load_9_dataInArray_1,
	pValidArray(0) => load_9_pValidArray_0,
	pValidArray(1) => load_9_pValidArray_1,
	readyArray(0) => load_9_readyArray_0,
	readyArray(1) => load_9_readyArray_1,
	nReadyArray(0) => load_9_nReadyArray_0,
	nReadyArray(1) => load_9_nReadyArray_1,
	validArray(0) => load_9_validArray_0,
	validArray(1) => load_9_validArray_1,
	dataOutArray(0) => load_9_dataOutArray_0,
	output_addr => load_9_dataOutArray_1
);

load_12: entity work.lsq_load_op(arch) generic map (2,2,32,32)
port map (
	clk => load_12_clk,
	rst => load_12_rst,
	dataInArray(0) => load_12_dataInArray_0,
	input_addr => load_12_dataInArray_1,
	pValidArray(0) => load_12_pValidArray_0,
	pValidArray(1) => load_12_pValidArray_1,
	readyArray(0) => load_12_readyArray_0,
	readyArray(1) => load_12_readyArray_1,
	nReadyArray(0) => load_12_nReadyArray_0,
	nReadyArray(1) => load_12_nReadyArray_1,
	validArray(0) => load_12_validArray_0,
	validArray(1) => load_12_validArray_1,
	dataOutArray(0) => load_12_dataOutArray_0,
	output_addr => load_12_dataOutArray_1
);

add_13: entity work.add_op(arch) generic map (2,1,32,32)
port map (
	clk => add_13_clk,
	rst => add_13_rst,
	dataInArray(0) => add_13_dataInArray_0,
	dataInArray(1) => add_13_dataInArray_1,
	pValidArray(0) => add_13_pValidArray_0,
	pValidArray(1) => add_13_pValidArray_1,
	readyArray(0) => add_13_readyArray_0,
	readyArray(1) => add_13_readyArray_1,
	nReadyArray(0) => add_13_nReadyArray_0,
	validArray(0) => add_13_validArray_0,
	dataOutArray(0) => add_13_dataOutArray_0
);

store_0: entity work.lsq_store_op(arch) generic map (2,2,32,32)
port map (
	clk => store_0_clk,
	rst => store_0_rst,
	dataInArray(0) => store_0_dataInArray_0,
	input_addr => store_0_dataInArray_1,
	pValidArray(0) => store_0_pValidArray_0,
	pValidArray(1) => store_0_pValidArray_1,
	readyArray(0) => store_0_readyArray_0,
	readyArray(1) => store_0_readyArray_1,
	nReadyArray(0) => store_0_nReadyArray_0,
	nReadyArray(1) => store_0_nReadyArray_1,
	validArray(0) => store_0_validArray_0,
	validArray(1) => store_0_validArray_1,
	dataOutArray(0) => store_0_dataOutArray_0,
	output_addr => store_0_dataOutArray_1
);

cst_2: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_2_clk,
	rst => cst_2_rst,
	dataInArray(0) => cst_2_dataInArray_0,
	pValidArray(0) => cst_2_pValidArray_0,
	readyArray(0) => cst_2_readyArray_0,
	nReadyArray(0) => cst_2_nReadyArray_0,
	validArray(0) => cst_2_validArray_0,
	dataOutArray(0) => cst_2_dataOutArray_0
);

add_16: entity work.add_op(arch) generic map (2,1,32,32)
port map (
	clk => add_16_clk,
	rst => add_16_rst,
	dataInArray(0) => add_16_dataInArray_0,
	dataInArray(1) => add_16_dataInArray_1,
	pValidArray(0) => add_16_pValidArray_0,
	pValidArray(1) => add_16_pValidArray_1,
	readyArray(0) => add_16_readyArray_0,
	readyArray(1) => add_16_readyArray_1,
	nReadyArray(0) => add_16_nReadyArray_0,
	validArray(0) => add_16_validArray_0,
	dataOutArray(0) => add_16_dataOutArray_0
);

icmp_17: entity work.icmp_slt_op(arch) generic map (2,1,32,1)
port map (
	clk => icmp_17_clk,
	rst => icmp_17_rst,
	dataInArray(0) => icmp_17_dataInArray_0,
	dataInArray(1) => icmp_17_dataInArray_1,
	pValidArray(0) => icmp_17_pValidArray_0,
	pValidArray(1) => icmp_17_pValidArray_1,
	readyArray(0) => icmp_17_readyArray_0,
	readyArray(1) => icmp_17_readyArray_1,
	nReadyArray(0) => icmp_17_nReadyArray_0,
	validArray(0) => icmp_17_validArray_0,
	dataOutArray(0) => icmp_17_dataOutArray_0
);

forkC_0: entity work.fork(arch) generic map (1,1,1,1)
port map (
	clk => forkC_0_clk,
	rst => forkC_0_rst,
	dataInArray(0) => forkC_0_dataInArray_0,
	pValidArray(0) => forkC_0_pValidArray_0,
	readyArray(0) => forkC_0_readyArray_0,
	nReadyArray(0) => forkC_0_nReadyArray_0,
	validArray(0) => forkC_0_validArray_0,
	dataOutArray(0) => forkC_0_dataOutArray_0
);

phi_n0: entity work.Mux(arch) generic map (3,1,32,32,1)
port map (
	clk => phi_n0_clk,
	rst => phi_n0_rst,
	Condition(0) => phi_n0_dataInArray_0,
	dataInArray(0) => phi_n0_dataInArray_1,
	dataInArray(1) => phi_n0_dataInArray_2,
	pValidArray(0) => phi_n0_pValidArray_0,
	pValidArray(1) => phi_n0_pValidArray_1,
	pValidArray(2) => phi_n0_pValidArray_2,
	readyArray(0) => phi_n0_readyArray_0,
	readyArray(1) => phi_n0_readyArray_1,
	readyArray(2) => phi_n0_readyArray_2,
	nReadyArray(0) => phi_n0_nReadyArray_0,
	validArray(0) => phi_n0_validArray_0,
	dataOutArray(0) => phi_n0_dataOutArray_0
);

phiC_1: entity work.Mux(arch) generic map (3,1,1,1,1)
port map (
	clk => phiC_1_clk,
	rst => phiC_1_rst,
	Condition(0) => phiC_1_dataInArray_0,
	dataInArray(0) => phiC_1_dataInArray_1,
	dataInArray(1) => phiC_1_dataInArray_2,
	pValidArray(0) => phiC_1_pValidArray_0,
	pValidArray(1) => phiC_1_pValidArray_1,
	pValidArray(2) => phiC_1_pValidArray_2,
	readyArray(0) => phiC_1_readyArray_0,
	readyArray(1) => phiC_1_readyArray_1,
	readyArray(2) => phiC_1_readyArray_2,
	nReadyArray(0) => phiC_1_nReadyArray_0,
	validArray(0) => phiC_1_validArray_0,
	dataOutArray(0) => phiC_1_dataOutArray_0
);

branch_0: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_0_clk,
	rst => branch_0_rst,
	dataInArray(0) => branch_0_dataInArray_0,
	Condition(0) => branch_0_dataInArray_1,
	pValidArray(0) => branch_0_pValidArray_0,
	pValidArray(1) => branch_0_pValidArray_1,
	readyArray(0) => branch_0_readyArray_0,
	readyArray(1) => branch_0_readyArray_1,
	nReadyArray(0) => branch_0_nReadyArray_0,
	nReadyArray(1) => branch_0_nReadyArray_1,
	validArray(0) => branch_0_validArray_0,
	validArray(1) => branch_0_validArray_1,
	dataOutArray(0) => branch_0_dataOutArray_0,
	dataOutArray(1) => branch_0_dataOutArray_1
);

phi_n3: entity work.merge(arch) generic map (2,1,32,32)
port map (
	clk => phi_n3_clk,
	rst => phi_n3_rst,
	dataInArray(0) => phi_n3_dataInArray_0,
	dataInArray(1) => phi_n3_dataInArray_1,
	pValidArray(0) => phi_n3_pValidArray_0,
	pValidArray(1) => phi_n3_pValidArray_1,
	readyArray(0) => phi_n3_readyArray_0,
	readyArray(1) => phi_n3_readyArray_1,
	nReadyArray(0) => phi_n3_nReadyArray_0,
	validArray(0) => phi_n3_validArray_0,
	dataOutArray(0) => phi_n3_dataOutArray_0
);

branch_4: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_4_clk,
	rst => branch_4_rst,
	dataInArray(0) => branch_4_dataInArray_0,
	Condition(0) => branch_4_dataInArray_1,
	pValidArray(0) => branch_4_pValidArray_0,
	pValidArray(1) => branch_4_pValidArray_1,
	readyArray(0) => branch_4_readyArray_0,
	readyArray(1) => branch_4_readyArray_1,
	nReadyArray(0) => branch_4_nReadyArray_0,
	nReadyArray(1) => branch_4_nReadyArray_1,
	validArray(0) => branch_4_validArray_0,
	validArray(1) => branch_4_validArray_1,
	dataOutArray(0) => branch_4_dataOutArray_0,
	dataOutArray(1) => branch_4_dataOutArray_1
);

branchC_7: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_7_clk,
	rst => branchC_7_rst,
	dataInArray(0) => branchC_7_dataInArray_0,
	Condition(0) => branchC_7_dataInArray_1,
	pValidArray(0) => branchC_7_pValidArray_0,
	pValidArray(1) => branchC_7_pValidArray_1,
	readyArray(0) => branchC_7_readyArray_0,
	readyArray(1) => branchC_7_readyArray_1,
	nReadyArray(0) => branchC_7_nReadyArray_0,
	nReadyArray(1) => branchC_7_nReadyArray_1,
	validArray(0) => branchC_7_validArray_0,
	validArray(1) => branchC_7_validArray_1,
	dataOutArray(0) => branchC_7_dataOutArray_0,
	dataOutArray(1) => branchC_7_dataOutArray_1
);

fork_2: entity work.fork(arch) generic map (1,3,32,32)
port map (
	clk => fork_2_clk,
	rst => fork_2_rst,
	dataInArray(0) => fork_2_dataInArray_0,
	pValidArray(0) => fork_2_pValidArray_0,
	readyArray(0) => fork_2_readyArray_0,
	nReadyArray(0) => fork_2_nReadyArray_0,
	nReadyArray(1) => fork_2_nReadyArray_1,
	nReadyArray(2) => fork_2_nReadyArray_2,
	validArray(0) => fork_2_validArray_0,
	validArray(1) => fork_2_validArray_1,
	validArray(2) => fork_2_validArray_2,
	dataOutArray(0) => fork_2_dataOutArray_0,
	dataOutArray(1) => fork_2_dataOutArray_1,
	dataOutArray(2) => fork_2_dataOutArray_2
);

fork_3: entity work.fork(arch) generic map (1,2,32,32)
port map (
	clk => fork_3_clk,
	rst => fork_3_rst,
	dataInArray(0) => fork_3_dataInArray_0,
	pValidArray(0) => fork_3_pValidArray_0,
	readyArray(0) => fork_3_readyArray_0,
	nReadyArray(0) => fork_3_nReadyArray_0,
	nReadyArray(1) => fork_3_nReadyArray_1,
	validArray(0) => fork_3_validArray_0,
	validArray(1) => fork_3_validArray_1,
	dataOutArray(0) => fork_3_dataOutArray_0,
	dataOutArray(1) => fork_3_dataOutArray_1
);

fork_4: entity work.fork(arch) generic map (1,4,32,32)
port map (
	clk => fork_4_clk,
	rst => fork_4_rst,
	dataInArray(0) => fork_4_dataInArray_0,
	pValidArray(0) => fork_4_pValidArray_0,
	readyArray(0) => fork_4_readyArray_0,
	nReadyArray(0) => fork_4_nReadyArray_0,
	nReadyArray(1) => fork_4_nReadyArray_1,
	nReadyArray(2) => fork_4_nReadyArray_2,
	nReadyArray(3) => fork_4_nReadyArray_3,
	validArray(0) => fork_4_validArray_0,
	validArray(1) => fork_4_validArray_1,
	validArray(2) => fork_4_validArray_2,
	validArray(3) => fork_4_validArray_3,
	dataOutArray(0) => fork_4_dataOutArray_0,
	dataOutArray(1) => fork_4_dataOutArray_1,
	dataOutArray(2) => fork_4_dataOutArray_2,
	dataOutArray(3) => fork_4_dataOutArray_3
);

fork_6: entity work.fork(arch) generic map (1,2,32,32)
port map (
	clk => fork_6_clk,
	rst => fork_6_rst,
	dataInArray(0) => fork_6_dataInArray_0,
	pValidArray(0) => fork_6_pValidArray_0,
	readyArray(0) => fork_6_readyArray_0,
	nReadyArray(0) => fork_6_nReadyArray_0,
	nReadyArray(1) => fork_6_nReadyArray_1,
	validArray(0) => fork_6_validArray_0,
	validArray(1) => fork_6_validArray_1,
	dataOutArray(0) => fork_6_dataOutArray_0,
	dataOutArray(1) => fork_6_dataOutArray_1
);

forkC_7: entity work.fork(arch) generic map (1,3,1,1)
port map (
	clk => forkC_7_clk,
	rst => forkC_7_rst,
	dataInArray(0) => forkC_7_dataInArray_0,
	pValidArray(0) => forkC_7_pValidArray_0,
	readyArray(0) => forkC_7_readyArray_0,
	nReadyArray(0) => forkC_7_nReadyArray_0,
	nReadyArray(1) => forkC_7_nReadyArray_1,
	nReadyArray(2) => forkC_7_nReadyArray_2,
	validArray(0) => forkC_7_validArray_0,
	validArray(1) => forkC_7_validArray_1,
	validArray(2) => forkC_7_validArray_2,
	dataOutArray(0) => forkC_7_dataOutArray_0,
	dataOutArray(1) => forkC_7_dataOutArray_1,
	dataOutArray(2) => forkC_7_dataOutArray_2
);

fork_8: entity work.fork(arch) generic map (1,3,32,32)
port map (
	clk => fork_8_clk,
	rst => fork_8_rst,
	dataInArray(0) => fork_8_dataInArray_0,
	pValidArray(0) => fork_8_pValidArray_0,
	readyArray(0) => fork_8_readyArray_0,
	nReadyArray(0) => fork_8_nReadyArray_0,
	nReadyArray(1) => fork_8_nReadyArray_1,
	nReadyArray(2) => fork_8_nReadyArray_2,
	validArray(0) => fork_8_validArray_0,
	validArray(1) => fork_8_validArray_1,
	validArray(2) => fork_8_validArray_2,
	dataOutArray(0) => fork_8_dataOutArray_0,
	dataOutArray(1) => fork_8_dataOutArray_1,
	dataOutArray(2) => fork_8_dataOutArray_2
);

fork_10: entity work.fork(arch) generic map (1,2,32,32)
port map (
	clk => fork_10_clk,
	rst => fork_10_rst,
	dataInArray(0) => fork_10_dataInArray_0,
	pValidArray(0) => fork_10_pValidArray_0,
	readyArray(0) => fork_10_readyArray_0,
	nReadyArray(0) => fork_10_nReadyArray_0,
	nReadyArray(1) => fork_10_nReadyArray_1,
	validArray(0) => fork_10_validArray_0,
	validArray(1) => fork_10_validArray_1,
	dataOutArray(0) => fork_10_dataOutArray_0,
	dataOutArray(1) => fork_10_dataOutArray_1
);

Buffer_1: entity work.elasticBuffer(arch) generic map (1,1,32,32)
port map (
	clk => Buffer_1_clk,
	rst => Buffer_1_rst,
	dataInArray(0) => Buffer_1_dataInArray_0,
	pValidArray(0) => Buffer_1_pValidArray_0,
	readyArray(0) => Buffer_1_readyArray_0,
	nReadyArray(0) => Buffer_1_nReadyArray_0,
	validArray(0) => Buffer_1_validArray_0,
	dataOutArray(0) => Buffer_1_dataOutArray_0
);

Buffer_2: entity work.transpFifo(arch) generic map (1,1,32,32,5)
port map (
	clk => Buffer_2_clk,
	rst => Buffer_2_rst,
	dataInArray(0) => Buffer_2_dataInArray_0,
	pValidArray(0) => Buffer_2_pValidArray_0,
	readyArray(0) => Buffer_2_readyArray_0,
	nReadyArray(0) => Buffer_2_nReadyArray_0,
	validArray(0) => Buffer_2_validArray_0,
	dataOutArray(0) => Buffer_2_dataOutArray_0
);

Buffer_3: entity work.elasticBuffer(arch) generic map (1,1,32,32)
port map (
	clk => Buffer_3_clk,
	rst => Buffer_3_rst,
	dataInArray(0) => Buffer_3_dataInArray_0,
	pValidArray(0) => Buffer_3_pValidArray_0,
	readyArray(0) => Buffer_3_readyArray_0,
	nReadyArray(0) => Buffer_3_nReadyArray_0,
	validArray(0) => Buffer_3_validArray_0,
	dataOutArray(0) => Buffer_3_dataOutArray_0
);

Buffer_4: entity work.elasticBuffer(arch) generic map (1,1,1,1)
port map (
	clk => Buffer_4_clk,
	rst => Buffer_4_rst,
	dataInArray(0) => Buffer_4_dataInArray_0,
	pValidArray(0) => Buffer_4_pValidArray_0,
	readyArray(0) => Buffer_4_readyArray_0,
	nReadyArray(0) => Buffer_4_nReadyArray_0,
	validArray(0) => Buffer_4_validArray_0,
	dataOutArray(0) => Buffer_4_dataOutArray_0
);

phi_19: entity work.Mux(arch) generic map (3,1,32,32,1)
port map (
	clk => phi_19_clk,
	rst => phi_19_rst,
	Condition(0) => phi_19_dataInArray_0,
	dataInArray(0) => phi_19_dataInArray_1,
	dataInArray(1) => phi_19_dataInArray_2,
	pValidArray(0) => phi_19_pValidArray_0,
	pValidArray(1) => phi_19_pValidArray_1,
	pValidArray(2) => phi_19_pValidArray_2,
	readyArray(0) => phi_19_readyArray_0,
	readyArray(1) => phi_19_readyArray_1,
	readyArray(2) => phi_19_readyArray_2,
	nReadyArray(0) => phi_19_nReadyArray_0,
	validArray(0) => phi_19_validArray_0,
	dataOutArray(0) => phi_19_dataOutArray_0
);

ret_0: entity work.ret_op(arch) generic map (1,1,32,32)
port map (
	clk => ret_0_clk,
	rst => ret_0_rst,
	dataInArray(0) => ret_0_dataInArray_0,
	pValidArray(0) => ret_0_pValidArray_0,
	readyArray(0) => ret_0_readyArray_0,
	nReadyArray(0) => ret_0_nReadyArray_0,
	validArray(0) => ret_0_validArray_0,
	dataOutArray(0) => ret_0_dataOutArray_0
);

c_LSQ_hist:LSQ_hist
port map (
	clock => LSQ_hist_clk,
	reset => LSQ_hist_rst,
	io_memIsReadyForLoads => LSQ_hist_load_ready,
	io_memIsReadyForStores => LSQ_hist_store_ready,
	io_storeDataOut => LSQ_hist_dout0,
	io_storeAddrOut => LSQ_hist_address0,
	io_storeEnable => LSQ_hist_we0_ce0,
	io_loadDataIn => LSQ_hist_din1,
	io_loadAddrOut => LSQ_hist_address1,
	io_loadEnable => LSQ_hist_ce1,
	io_bbReadyToPrevs_0 => LSQ_hist_readyArray_0,
	io_bbpValids_0 => LSQ_hist_pValidArray_0,
	io_rdPortsPrev_0_ready => LSQ_hist_readyArray_1,
	io_rdPortsPrev_0_valid => LSQ_hist_pValidArray_1,
	io_rdPortsPrev_0_bits => LSQ_hist_dataInArray_1,
	io_wrAddrPorts_0_ready => LSQ_hist_readyArray_2,
	io_wrAddrPorts_0_valid => LSQ_hist_pValidArray_2,
	io_wrAddrPorts_0_bits => LSQ_hist_dataInArray_2,
	io_wrDataPorts_0_ready => LSQ_hist_readyArray_3,
	io_wrDataPorts_0_valid => LSQ_hist_pValidArray_3,
	io_wrDataPorts_0_bits => LSQ_hist_dataInArray_3,
	io_rdPortsNext_0_ready => LSQ_hist_nReadyArray_0,
	io_rdPortsNext_0_valid => LSQ_hist_validArray_0,
	io_rdPortsNext_0_bits => LSQ_hist_dataOutArray_0,
	io_Empty_Valid => LSQ_hist_validArray_1

);

MC_feature: entity work.MemCont(arch) generic map (32,32,1,1,1)
port map (
	clk => MC_feature_clk,
	rst => MC_feature_rst,
	io_storeDataOut => feature_dout0,
	io_storeAddrOut => feature_address0,
	io_storeEnable => MC_feature_we0_ce0,
	io_loadDataIn => feature_din1,
	io_loadAddrOut => feature_address1,
	io_loadEnable => feature_ce1,
	io_bbReadyToPrevs(0) => MC_feature_readyArray_1,
	io_bbpValids(0) => '0',
	io_bb_stCountArray(0) => x"00000000",
	io_rdPortsPrev_ready(0) => MC_feature_readyArray_0,
	io_rdPortsPrev_valid(0) => MC_feature_pValidArray_0,
	io_rdPortsPrev_bits(0) => MC_feature_dataInArray_0,
	io_wrAddrPorts_ready(0) => MC_feature_readyArray_2,
	io_wrAddrPorts_valid(0) => MC_feature_pValidArray_2,
	io_wrAddrPorts_bits(0) => MC_feature_dataInArray_2,
	io_wrDataPorts_ready(0) => MC_feature_readyArray_3,
	io_wrDataPorts_valid(0) => MC_feature_pValidArray_3,
	io_wrDataPorts_bits(0) => MC_feature_dataInArray_3,
	io_rdPortsNext_ready(0) => MC_feature_nReadyArray_0,
	io_rdPortsNext_valid(0) => MC_feature_validArray_0,
	io_rdPortsNext_bits(0) => MC_feature_dataOutArray_0,
	io_Empty_Valid => MC_feature_validArray_1,
	io_Empty_Ready => MC_feature_nReadyArray_1

);

MC_weight: entity work.MemCont(arch) generic map (32,32,1,1,1)
port map (
	clk => MC_weight_clk,
	rst => MC_weight_rst,
	io_storeDataOut => weight_dout0,
	io_storeAddrOut => weight_address0,
	io_storeEnable => MC_weight_we0_ce0,
	io_loadDataIn => weight_din1,
	io_loadAddrOut => weight_address1,
	io_loadEnable => weight_ce1,
	io_bbReadyToPrevs(0) => MC_weight_readyArray_1,
	io_bbpValids(0) => '0',
	io_bb_stCountArray(0) => x"00000000",
	io_rdPortsPrev_ready(0) => MC_weight_readyArray_0,
	io_rdPortsPrev_valid(0) => MC_weight_pValidArray_0,
	io_rdPortsPrev_bits(0) => MC_weight_dataInArray_0,
	io_wrAddrPorts_ready(0) => MC_weight_readyArray_2,
	io_wrAddrPorts_valid(0) => MC_weight_pValidArray_2,
	io_wrAddrPorts_bits(0) => MC_weight_dataInArray_2,
	io_wrDataPorts_ready(0) => MC_weight_readyArray_3,
	io_wrDataPorts_valid(0) => MC_weight_pValidArray_3,
	io_wrDataPorts_bits(0) => MC_weight_dataInArray_3,
	io_rdPortsNext_ready(0) => MC_weight_nReadyArray_0,
	io_rdPortsNext_valid(0) => MC_weight_validArray_0,
	io_rdPortsNext_bits(0) => MC_weight_dataOutArray_0,
	io_Empty_Valid => MC_weight_validArray_1,
	io_Empty_Ready => MC_weight_nReadyArray_1

);

sink_1: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_1_clk,
	rst => sink_1_rst,
	dataInArray(0) => sink_1_dataInArray_0,
	pValidArray(0) => sink_1_pValidArray_0,
	readyArray(0) => sink_1_readyArray_0
);

sink_2: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_2_clk,
	rst => sink_2_rst,
	dataInArray(0) => sink_2_dataInArray_0,
	pValidArray(0) => sink_2_pValidArray_0,
	readyArray(0) => sink_2_readyArray_0
);

sink_3: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_3_clk,
	rst => sink_3_rst,
	dataInArray(0) => sink_3_dataInArray_0,
	pValidArray(0) => sink_3_pValidArray_0,
	readyArray(0) => sink_3_readyArray_0
);

sink_4: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_4_clk,
	rst => sink_4_rst,
	dataInArray(0) => sink_4_dataInArray_0,
	pValidArray(0) => sink_4_pValidArray_0,
	readyArray(0) => sink_4_readyArray_0
);

sink_5: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_5_clk,
	rst => sink_5_rst,
	dataInArray(0) => sink_5_dataInArray_0,
	pValidArray(0) => sink_5_pValidArray_0,
	readyArray(0) => sink_5_readyArray_0
);

end_0: entity work.end_node(arch) generic map (1,3,1,32,32)
port map (
	clk => end_0_clk,
	rst => end_0_rst,
	dataInArray(0) => end_0_dataInArray_3,
	eValidArray(0) => end_0_pValidArray_0,
	eValidArray(1) => end_0_pValidArray_1,
	eValidArray(2) => end_0_pValidArray_2,
	pValidArray(0) => end_0_pValidArray_3,
	eReadyArray(0) => end_0_readyArray_0,
	eReadyArray(1) => end_0_readyArray_1,
	eReadyArray(2) => end_0_readyArray_2,
	readyArray(0) => end_0_readyArray_3,
	dataOutArray(0) => end_0_dataOutArray_0,
	validArray(0) => end_0_validArray_0,
	nReadyArray(0) => end_0_nReadyArray_0
);

end behavioral; 
