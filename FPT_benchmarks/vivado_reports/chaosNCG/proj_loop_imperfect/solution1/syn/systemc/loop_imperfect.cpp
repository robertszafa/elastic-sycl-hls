// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "loop_imperfect.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic loop_imperfect::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic loop_imperfect::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<83> loop_imperfect::ap_ST_fsm_state1 = "1";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state2 = "10";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state3 = "100";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state4 = "1000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state5 = "10000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state6 = "100000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state7 = "1000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state8 = "10000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state9 = "100000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state10 = "1000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state11 = "10000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state12 = "100000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> loop_imperfect::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> loop_imperfect::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> loop_imperfect::ap_const_lv32_3 = "11";
const sc_lv<32> loop_imperfect::ap_const_lv32_51 = "1010001";
const sc_lv<32> loop_imperfect::ap_const_lv32_1 = "1";
const sc_lv<1> loop_imperfect::ap_const_lv1_1 = "1";
const sc_lv<32> loop_imperfect::ap_const_lv32_2 = "10";
const sc_lv<32> loop_imperfect::ap_const_lv32_4 = "100";
const sc_lv<32> loop_imperfect::ap_const_lv32_5 = "101";
const sc_lv<32> loop_imperfect::ap_const_lv32_6 = "110";
const sc_lv<32> loop_imperfect::ap_const_lv32_29 = "101001";
const sc_lv<32> loop_imperfect::ap_const_lv32_2A = "101010";
const sc_lv<32> loop_imperfect::ap_const_lv32_2B = "101011";
const sc_lv<32> loop_imperfect::ap_const_lv32_4F = "1001111";
const sc_lv<32> loop_imperfect::ap_const_lv32_50 = "1010000";
const sc_lv<11> loop_imperfect::ap_const_lv11_0 = "00000000000";
const sc_lv<32> loop_imperfect::ap_const_lv32_52 = "1010010";
const sc_lv<32> loop_imperfect::ap_const_lv32_2C = "101100";
const sc_lv<11> loop_imperfect::ap_const_lv11_7D0 = "11111010000";
const sc_lv<11> loop_imperfect::ap_const_lv11_4 = "100";
const sc_lv<32> loop_imperfect::ap_const_lv32_11 = "10001";
const sc_lv<6> loop_imperfect::ap_const_lv6_10 = "10000";
const sc_lv<32> loop_imperfect::ap_const_lv32_1F = "11111";
const sc_lv<6> loop_imperfect::ap_const_lv6_2 = "10";
const sc_lv<11> loop_imperfect::ap_const_lv11_1 = "1";
const sc_lv<11> loop_imperfect::ap_const_lv11_2 = "10";
const sc_lv<6> loop_imperfect::ap_const_lv6_3 = "11";
const sc_lv<1> loop_imperfect::ap_const_lv1_0 = "0";
const bool loop_imperfect::ap_const_boolean_1 = true;

loop_imperfect::loop_imperfect(sc_module_name name) : sc_module(name), mVcdFile(0) {
    loop_imperfect_srbkb_U1 = new loop_imperfect_srbkb<1,36,32,6,32>("loop_imperfect_srbkb_U1");
    loop_imperfect_srbkb_U1->clk(ap_clk);
    loop_imperfect_srbkb_U1->reset(ap_rst);
    loop_imperfect_srbkb_U1->start(grp_fu_163_ap_start);
    loop_imperfect_srbkb_U1->done(grp_fu_163_ap_done);
    loop_imperfect_srbkb_U1->din0(grp_fu_163_p0);
    loop_imperfect_srbkb_U1->din1(grp_fu_163_p1);
    loop_imperfect_srbkb_U1->ce(ap_var_for_const0);
    loop_imperfect_srbkb_U1->dout(grp_fu_163_p2);
    loop_imperfect_srbkb_U2 = new loop_imperfect_srbkb<1,36,32,6,32>("loop_imperfect_srbkb_U2");
    loop_imperfect_srbkb_U2->clk(ap_clk);
    loop_imperfect_srbkb_U2->reset(ap_rst);
    loop_imperfect_srbkb_U2->start(grp_fu_224_ap_start);
    loop_imperfect_srbkb_U2->done(grp_fu_224_ap_done);
    loop_imperfect_srbkb_U2->din0(b1_1_reg_377);
    loop_imperfect_srbkb_U2->din1(grp_fu_224_p1);
    loop_imperfect_srbkb_U2->ce(ap_var_for_const0);
    loop_imperfect_srbkb_U2->dout(grp_fu_224_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_M_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( zext_ln101_fu_140_p1 );
    sensitive << ( zext_ln111_fu_244_p1 );

    SC_METHOD(thread_M_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln101_1_fu_145_p1 );

    SC_METHOD(thread_M_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state81 );

    SC_METHOD(thread_M_ce1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_add_ln101_fu_134_p2);
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln100_fu_128_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln100_fu_128_p2 );

    SC_METHOD(thread_b0_1_fu_159_p2);
    sensitive << ( b0_reg_330 );
    sensitive << ( b1_reg_336 );

    SC_METHOD(thread_b0_2_fu_214_p2);
    sensitive << ( b0_1_reg_341 );
    sensitive << ( or_ln_fu_207_p3 );

    SC_METHOD(thread_b1_1_fu_219_p2);
    sensitive << ( b0_reg_330 );
    sensitive << ( or_ln_fu_207_p3 );

    SC_METHOD(thread_b1_2_fu_292_p2);
    sensitive << ( b1_1_reg_377 );
    sensitive << ( or_ln1_fu_284_p3 );

    SC_METHOD(thread_buffer_r_address0);
    sensitive << ( buffer_addr_reg_320 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_buffer_r_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( sext_ln102_1_fu_154_p1 );
    sensitive << ( sext_ln111_fu_297_p1 );

    SC_METHOD(thread_buffer_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_buffer_r_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state83 );

    SC_METHOD(thread_buffer_r_d0);
    sensitive << ( b0_2_reg_372 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_buffer_r_d1);
    sensitive << ( b1_2_reg_409 );
    sensitive << ( ap_CS_fsm_state83 );

    SC_METHOD(thread_buffer_r_we0);
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_buffer_r_we1);
    sensitive << ( ap_CS_fsm_state83 );

    SC_METHOD(thread_grp_fu_163_ap_start);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_163_p0);
    sensitive << ( b0_reg_330 );
    sensitive << ( b1_reg_336 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_163_p1);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_224_ap_start);
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_fu_224_p1);
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_i_fu_249_p2);
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_icmp_ln100_fu_128_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_lshr_ln105_fu_193_p2);
    sensitive << ( sub_ln105_reg_362 );

    SC_METHOD(thread_lshr_ln108_fu_260_p2);
    sensitive << ( sub_ln108_fu_255_p2 );

    SC_METHOD(thread_or_ln105_fu_201_p2);
    sensitive << ( trunc_ln105_1_fu_198_p1 );
    sensitive << ( lshr_ln105_fu_193_p2 );

    SC_METHOD(thread_or_ln108_fu_269_p2);
    sensitive << ( trunc_ln108_1_fu_266_p1 );
    sensitive << ( lshr_ln108_fu_260_p2 );

    SC_METHOD(thread_or_ln111_fu_238_p2);
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_or_ln1_fu_284_p3);
    sensitive << ( tmp_1_fu_275_p4 );
    sensitive << ( or_ln108_fu_269_p2 );

    SC_METHOD(thread_or_ln_fu_207_p3);
    sensitive << ( tmp_reg_367 );
    sensitive << ( or_ln105_fu_201_p2 );

    SC_METHOD(thread_sext_ln102_1_fu_154_p1);
    sensitive << ( reg_123 );

    SC_METHOD(thread_sext_ln102_fu_149_p1);
    sensitive << ( M_q0 );

    SC_METHOD(thread_sext_ln111_fu_297_p1);
    sensitive << ( reg_123 );

    SC_METHOD(thread_shl_ln105_fu_173_p2);
    sensitive << ( srem_ln105_reg_347 );

    SC_METHOD(thread_shl_ln108_fu_233_p2);
    sensitive << ( srem_ln108_reg_383 );

    SC_METHOD(thread_sub_ln105_fu_178_p2);
    sensitive << ( trunc_ln105_reg_352 );

    SC_METHOD(thread_sub_ln108_fu_255_p2);
    sensitive << ( trunc_ln108_reg_388 );

    SC_METHOD(thread_tmp_1_fu_275_p4);
    sensitive << ( shl_ln108_reg_393 );

    SC_METHOD(thread_trunc_ln105_1_fu_198_p1);
    sensitive << ( shl_ln105_reg_357 );

    SC_METHOD(thread_trunc_ln105_fu_169_p1);
    sensitive << ( grp_fu_163_p2 );

    SC_METHOD(thread_trunc_ln108_1_fu_266_p1);
    sensitive << ( shl_ln108_reg_393 );

    SC_METHOD(thread_trunc_ln108_fu_229_p1);
    sensitive << ( grp_fu_224_p2 );

    SC_METHOD(thread_zext_ln101_1_fu_145_p1);
    sensitive << ( add_ln101_reg_305 );

    SC_METHOD(thread_zext_ln101_fu_140_p1);
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_zext_ln111_fu_244_p1);
    sensitive << ( or_ln111_fu_238_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln100_fu_128_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "loop_imperfect_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, buffer_r_address0, "(port)buffer_r_address0");
    sc_trace(mVcdFile, buffer_r_ce0, "(port)buffer_r_ce0");
    sc_trace(mVcdFile, buffer_r_we0, "(port)buffer_r_we0");
    sc_trace(mVcdFile, buffer_r_d0, "(port)buffer_r_d0");
    sc_trace(mVcdFile, buffer_r_q0, "(port)buffer_r_q0");
    sc_trace(mVcdFile, buffer_r_address1, "(port)buffer_r_address1");
    sc_trace(mVcdFile, buffer_r_ce1, "(port)buffer_r_ce1");
    sc_trace(mVcdFile, buffer_r_we1, "(port)buffer_r_we1");
    sc_trace(mVcdFile, buffer_r_d1, "(port)buffer_r_d1");
    sc_trace(mVcdFile, buffer_r_q1, "(port)buffer_r_q1");
    sc_trace(mVcdFile, M_address0, "(port)M_address0");
    sc_trace(mVcdFile, M_ce0, "(port)M_ce0");
    sc_trace(mVcdFile, M_q0, "(port)M_q0");
    sc_trace(mVcdFile, M_address1, "(port)M_address1");
    sc_trace(mVcdFile, M_ce1, "(port)M_ce1");
    sc_trace(mVcdFile, M_q1, "(port)M_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_123, "reg_123");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state82, "ap_CS_fsm_state82");
    sc_trace(mVcdFile, add_ln101_fu_134_p2, "add_ln101_fu_134_p2");
    sc_trace(mVcdFile, add_ln101_reg_305, "add_ln101_reg_305");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln100_fu_128_p2, "icmp_ln100_fu_128_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, buffer_addr_reg_320, "buffer_addr_reg_320");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, b0_reg_330, "b0_reg_330");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, b1_reg_336, "b1_reg_336");
    sc_trace(mVcdFile, b0_1_fu_159_p2, "b0_1_fu_159_p2");
    sc_trace(mVcdFile, b0_1_reg_341, "b0_1_reg_341");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_163_p2, "grp_fu_163_p2");
    sc_trace(mVcdFile, srem_ln105_reg_347, "srem_ln105_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, trunc_ln105_fu_169_p1, "trunc_ln105_fu_169_p1");
    sc_trace(mVcdFile, trunc_ln105_reg_352, "trunc_ln105_reg_352");
    sc_trace(mVcdFile, shl_ln105_fu_173_p2, "shl_ln105_fu_173_p2");
    sc_trace(mVcdFile, shl_ln105_reg_357, "shl_ln105_reg_357");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, sub_ln105_fu_178_p2, "sub_ln105_fu_178_p2");
    sc_trace(mVcdFile, sub_ln105_reg_362, "sub_ln105_reg_362");
    sc_trace(mVcdFile, tmp_reg_367, "tmp_reg_367");
    sc_trace(mVcdFile, b0_2_fu_214_p2, "b0_2_fu_214_p2");
    sc_trace(mVcdFile, b0_2_reg_372, "b0_2_reg_372");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, b1_1_fu_219_p2, "b1_1_fu_219_p2");
    sc_trace(mVcdFile, b1_1_reg_377, "b1_1_reg_377");
    sc_trace(mVcdFile, grp_fu_224_p2, "grp_fu_224_p2");
    sc_trace(mVcdFile, srem_ln108_reg_383, "srem_ln108_reg_383");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, trunc_ln108_fu_229_p1, "trunc_ln108_fu_229_p1");
    sc_trace(mVcdFile, trunc_ln108_reg_388, "trunc_ln108_reg_388");
    sc_trace(mVcdFile, shl_ln108_fu_233_p2, "shl_ln108_fu_233_p2");
    sc_trace(mVcdFile, shl_ln108_reg_393, "shl_ln108_reg_393");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, i_fu_249_p2, "i_fu_249_p2");
    sc_trace(mVcdFile, i_reg_404, "i_reg_404");
    sc_trace(mVcdFile, b1_2_fu_292_p2, "b1_2_fu_292_p2");
    sc_trace(mVcdFile, b1_2_reg_409, "b1_2_reg_409");
    sc_trace(mVcdFile, i_0_reg_111, "i_0_reg_111");
    sc_trace(mVcdFile, ap_CS_fsm_state83, "ap_CS_fsm_state83");
    sc_trace(mVcdFile, zext_ln101_fu_140_p1, "zext_ln101_fu_140_p1");
    sc_trace(mVcdFile, zext_ln101_1_fu_145_p1, "zext_ln101_1_fu_145_p1");
    sc_trace(mVcdFile, sext_ln102_fu_149_p1, "sext_ln102_fu_149_p1");
    sc_trace(mVcdFile, sext_ln102_1_fu_154_p1, "sext_ln102_1_fu_154_p1");
    sc_trace(mVcdFile, zext_ln111_fu_244_p1, "zext_ln111_fu_244_p1");
    sc_trace(mVcdFile, sext_ln111_fu_297_p1, "sext_ln111_fu_297_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, grp_fu_163_p0, "grp_fu_163_p0");
    sc_trace(mVcdFile, grp_fu_163_p1, "grp_fu_163_p1");
    sc_trace(mVcdFile, trunc_ln105_1_fu_198_p1, "trunc_ln105_1_fu_198_p1");
    sc_trace(mVcdFile, lshr_ln105_fu_193_p2, "lshr_ln105_fu_193_p2");
    sc_trace(mVcdFile, or_ln105_fu_201_p2, "or_ln105_fu_201_p2");
    sc_trace(mVcdFile, or_ln_fu_207_p3, "or_ln_fu_207_p3");
    sc_trace(mVcdFile, grp_fu_224_p1, "grp_fu_224_p1");
    sc_trace(mVcdFile, or_ln111_fu_238_p2, "or_ln111_fu_238_p2");
    sc_trace(mVcdFile, sub_ln108_fu_255_p2, "sub_ln108_fu_255_p2");
    sc_trace(mVcdFile, trunc_ln108_1_fu_266_p1, "trunc_ln108_1_fu_266_p1");
    sc_trace(mVcdFile, lshr_ln108_fu_260_p2, "lshr_ln108_fu_260_p2");
    sc_trace(mVcdFile, tmp_1_fu_275_p4, "tmp_1_fu_275_p4");
    sc_trace(mVcdFile, or_ln108_fu_269_p2, "or_ln108_fu_269_p2");
    sc_trace(mVcdFile, or_ln1_fu_284_p3, "or_ln1_fu_284_p3");
    sc_trace(mVcdFile, grp_fu_163_ap_start, "grp_fu_163_ap_start");
    sc_trace(mVcdFile, grp_fu_163_ap_done, "grp_fu_163_ap_done");
    sc_trace(mVcdFile, grp_fu_224_ap_start, "grp_fu_224_ap_start");
    sc_trace(mVcdFile, grp_fu_224_ap_done, "grp_fu_224_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("loop_imperfect.hdltvin.dat");
    mHdltvoutHandle.open("loop_imperfect.hdltvout.dat");
}

loop_imperfect::~loop_imperfect() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete loop_imperfect_srbkb_U1;
    delete loop_imperfect_srbkb_U2;
}

void loop_imperfect::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void loop_imperfect::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        i_0_reg_111 = i_reg_404.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_111 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        reg_123 = M_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        reg_123 = M_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln100_fu_128_p2.read(), ap_const_lv1_1))) {
        add_ln101_reg_305 = add_ln101_fu_134_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        b0_1_reg_341 = b0_1_fu_159_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        b0_2_reg_372 = b0_2_fu_214_p2.read();
        b1_1_reg_377 = b1_1_fu_219_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        b0_reg_330 = buffer_r_q0.read();
        b1_reg_336 = buffer_r_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        b1_2_reg_409 = b1_2_fu_292_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer_addr_reg_320 =  (sc_lv<12>) (sext_ln102_fu_149_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        i_reg_404 = i_fu_249_p2.read();
        shl_ln108_reg_393 = shl_ln108_fu_233_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        shl_ln105_reg_357 = shl_ln105_fu_173_p2.read();
        sub_ln105_reg_362 = sub_ln105_fu_178_p2.read();
        tmp_reg_367 = shl_ln105_fu_173_p2.read().range(31, 6);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        srem_ln105_reg_347 = grp_fu_163_p2.read();
        trunc_ln105_reg_352 = trunc_ln105_fu_169_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        srem_ln108_reg_383 = grp_fu_224_p2.read();
        trunc_ln108_reg_388 = trunc_ln108_fu_229_p1.read();
    }
}

void loop_imperfect::thread_M_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        M_address0 =  (sc_lv<12>) (zext_ln111_fu_244_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        M_address0 =  (sc_lv<12>) (zext_ln101_fu_140_p1.read());
    } else {
        M_address0 = "XXXXXXXXXXXX";
    }
}

void loop_imperfect::thread_M_address1() {
    M_address1 =  (sc_lv<12>) (zext_ln101_1_fu_145_p1.read());
}

void loop_imperfect::thread_M_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()))) {
        M_ce0 = ap_const_logic_1;
    } else {
        M_ce0 = ap_const_logic_0;
    }
}

void loop_imperfect::thread_M_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        M_ce1 = ap_const_logic_1;
    } else {
        M_ce1 = ap_const_logic_0;
    }
}

void loop_imperfect::thread_add_ln101_fu_134_p2() {
    add_ln101_fu_134_p2 = (!ap_const_lv11_4.is_01() || !i_0_reg_111.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_4) + sc_biguint<11>(i_0_reg_111.read()));
}

void loop_imperfect::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void loop_imperfect::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void loop_imperfect::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void loop_imperfect::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void loop_imperfect::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void loop_imperfect::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void loop_imperfect::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void loop_imperfect::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void loop_imperfect::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void loop_imperfect::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void loop_imperfect::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void loop_imperfect::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[79];
}

void loop_imperfect::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[80];
}

void loop_imperfect::thread_ap_CS_fsm_state82() {
    ap_CS_fsm_state82 = ap_CS_fsm.read()[81];
}

void loop_imperfect::thread_ap_CS_fsm_state83() {
    ap_CS_fsm_state83 = ap_CS_fsm.read()[82];
}

void loop_imperfect::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln100_fu_128_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void loop_imperfect::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void loop_imperfect::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln100_fu_128_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void loop_imperfect::thread_b0_1_fu_159_p2() {
    b0_1_fu_159_p2 = (b1_reg_336.read() ^ b0_reg_330.read());
}

void loop_imperfect::thread_b0_2_fu_214_p2() {
    b0_2_fu_214_p2 = (or_ln_fu_207_p3.read() ^ b0_1_reg_341.read());
}

void loop_imperfect::thread_b1_1_fu_219_p2() {
    b1_1_fu_219_p2 = (b0_reg_330.read() ^ or_ln_fu_207_p3.read());
}

void loop_imperfect::thread_b1_2_fu_292_p2() {
    b1_2_fu_292_p2 = (!or_ln1_fu_284_p3.read().is_01() || !b1_1_reg_377.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln1_fu_284_p3.read()) + sc_biguint<32>(b1_1_reg_377.read()));
}

void loop_imperfect::thread_buffer_r_address0() {
    buffer_r_address0 = buffer_addr_reg_320.read();
}

void loop_imperfect::thread_buffer_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        buffer_r_address1 =  (sc_lv<12>) (sext_ln111_fu_297_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        buffer_r_address1 =  (sc_lv<12>) (sext_ln102_1_fu_154_p1.read());
    } else {
        buffer_r_address1 = "XXXXXXXXXXXX";
    }
}

void loop_imperfect::thread_buffer_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        buffer_r_ce0 = ap_const_logic_1;
    } else {
        buffer_r_ce0 = ap_const_logic_0;
    }
}

void loop_imperfect::thread_buffer_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()))) {
        buffer_r_ce1 = ap_const_logic_1;
    } else {
        buffer_r_ce1 = ap_const_logic_0;
    }
}

void loop_imperfect::thread_buffer_r_d0() {
    buffer_r_d0 = b0_2_reg_372.read();
}

void loop_imperfect::thread_buffer_r_d1() {
    buffer_r_d1 = b1_2_reg_409.read();
}

void loop_imperfect::thread_buffer_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        buffer_r_we0 = ap_const_logic_1;
    } else {
        buffer_r_we0 = ap_const_logic_0;
    }
}

void loop_imperfect::thread_buffer_r_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        buffer_r_we1 = ap_const_logic_1;
    } else {
        buffer_r_we1 = ap_const_logic_0;
    }
}

void loop_imperfect::thread_grp_fu_163_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_163_ap_start = ap_const_logic_1;
    } else {
        grp_fu_163_ap_start = ap_const_logic_0;
    }
}

void loop_imperfect::thread_grp_fu_163_p0() {
    grp_fu_163_p0 = (b1_reg_336.read() ^ b0_reg_330.read());
}

void loop_imperfect::thread_grp_fu_163_p1() {
    grp_fu_163_p1 =  (sc_lv<6>) (ap_const_lv32_11);
}

void loop_imperfect::thread_grp_fu_224_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_224_ap_start = ap_const_logic_1;
    } else {
        grp_fu_224_ap_start = ap_const_logic_0;
    }
}

void loop_imperfect::thread_grp_fu_224_p1() {
    grp_fu_224_p1 =  (sc_lv<6>) (ap_const_lv32_11);
}

void loop_imperfect::thread_i_fu_249_p2() {
    i_fu_249_p2 = (!ap_const_lv11_2.is_01() || !i_0_reg_111.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_2) + sc_biguint<11>(i_0_reg_111.read()));
}

void loop_imperfect::thread_icmp_ln100_fu_128_p2() {
    icmp_ln100_fu_128_p2 = (!i_0_reg_111.read().is_01() || !ap_const_lv11_7D0.is_01())? sc_lv<1>(): (sc_biguint<11>(i_0_reg_111.read()) < sc_biguint<11>(ap_const_lv11_7D0));
}

void loop_imperfect::thread_lshr_ln105_fu_193_p2() {
    lshr_ln105_fu_193_p2 = (!sub_ln105_reg_362.read().is_01())? sc_lv<6>(): ap_const_lv6_2 >> (unsigned short)sub_ln105_reg_362.read().to_uint();
}

void loop_imperfect::thread_lshr_ln108_fu_260_p2() {
    lshr_ln108_fu_260_p2 = (!sub_ln108_fu_255_p2.read().is_01())? sc_lv<6>(): ap_const_lv6_3 >> (unsigned short)sub_ln108_fu_255_p2.read().to_uint();
}

void loop_imperfect::thread_or_ln105_fu_201_p2() {
    or_ln105_fu_201_p2 = (trunc_ln105_1_fu_198_p1.read() | lshr_ln105_fu_193_p2.read());
}

void loop_imperfect::thread_or_ln108_fu_269_p2() {
    or_ln108_fu_269_p2 = (trunc_ln108_1_fu_266_p1.read() | lshr_ln108_fu_260_p2.read());
}

void loop_imperfect::thread_or_ln111_fu_238_p2() {
    or_ln111_fu_238_p2 = (i_0_reg_111.read() | ap_const_lv11_1);
}

void loop_imperfect::thread_or_ln1_fu_284_p3() {
    or_ln1_fu_284_p3 = esl_concat<26,6>(tmp_1_fu_275_p4.read(), or_ln108_fu_269_p2.read());
}

void loop_imperfect::thread_or_ln_fu_207_p3() {
    or_ln_fu_207_p3 = esl_concat<26,6>(tmp_reg_367.read(), or_ln105_fu_201_p2.read());
}

void loop_imperfect::thread_sext_ln102_1_fu_154_p1() {
    sext_ln102_1_fu_154_p1 = esl_sext<64,32>(reg_123.read());
}

void loop_imperfect::thread_sext_ln102_fu_149_p1() {
    sext_ln102_fu_149_p1 = esl_sext<64,32>(M_q0.read());
}

void loop_imperfect::thread_sext_ln111_fu_297_p1() {
    sext_ln111_fu_297_p1 = esl_sext<64,32>(reg_123.read());
}

void loop_imperfect::thread_shl_ln105_fu_173_p2() {
    shl_ln105_fu_173_p2 = (!srem_ln105_reg_347.read().is_01())? sc_lv<32>(): ap_const_lv32_2 << (unsigned short)srem_ln105_reg_347.read().to_uint();
}

void loop_imperfect::thread_shl_ln108_fu_233_p2() {
    shl_ln108_fu_233_p2 = (!srem_ln108_reg_383.read().is_01())? sc_lv<32>(): ap_const_lv32_3 << (unsigned short)srem_ln108_reg_383.read().to_uint();
}

void loop_imperfect::thread_sub_ln105_fu_178_p2() {
    sub_ln105_fu_178_p2 = (!ap_const_lv6_10.is_01() || !trunc_ln105_reg_352.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_10) - sc_biguint<6>(trunc_ln105_reg_352.read()));
}

void loop_imperfect::thread_sub_ln108_fu_255_p2() {
    sub_ln108_fu_255_p2 = (!ap_const_lv6_10.is_01() || !trunc_ln108_reg_388.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_10) - sc_biguint<6>(trunc_ln108_reg_388.read()));
}

void loop_imperfect::thread_tmp_1_fu_275_p4() {
    tmp_1_fu_275_p4 = shl_ln108_reg_393.read().range(31, 6);
}

void loop_imperfect::thread_trunc_ln105_1_fu_198_p1() {
    trunc_ln105_1_fu_198_p1 = shl_ln105_reg_357.read().range(6-1, 0);
}

void loop_imperfect::thread_trunc_ln105_fu_169_p1() {
    trunc_ln105_fu_169_p1 = grp_fu_163_p2.read().range(6-1, 0);
}

void loop_imperfect::thread_trunc_ln108_1_fu_266_p1() {
    trunc_ln108_1_fu_266_p1 = shl_ln108_reg_393.read().range(6-1, 0);
}

void loop_imperfect::thread_trunc_ln108_fu_229_p1() {
    trunc_ln108_fu_229_p1 = grp_fu_224_p2.read().range(6-1, 0);
}

void loop_imperfect::thread_zext_ln101_1_fu_145_p1() {
    zext_ln101_1_fu_145_p1 = esl_zext<64,11>(add_ln101_reg_305.read());
}

void loop_imperfect::thread_zext_ln101_fu_140_p1() {
    zext_ln101_fu_140_p1 = esl_zext<64,11>(i_0_reg_111.read());
}

void loop_imperfect::thread_zext_ln111_fu_244_p1() {
    zext_ln111_fu_244_p1 = esl_zext<64,11>(or_ln111_fu_238_p2.read());
}

void loop_imperfect::thread_ap_NS_fsm() {
    if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln100_fu_128_p2.read(), ap_const_lv1_0))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state2;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<83>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void loop_imperfect::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"buffer_r_address0\" :  \"" << buffer_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"buffer_r_ce0\" :  \"" << buffer_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"buffer_r_we0\" :  \"" << buffer_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"buffer_r_d0\" :  \"" << buffer_r_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"buffer_r_q0\" :  \"" << buffer_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"buffer_r_address1\" :  \"" << buffer_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"buffer_r_ce1\" :  \"" << buffer_r_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"buffer_r_we1\" :  \"" << buffer_r_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"buffer_r_d1\" :  \"" << buffer_r_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"buffer_r_q1\" :  \"" << buffer_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_address0\" :  \"" << M_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_ce0\" :  \"" << M_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_q0\" :  \"" << M_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_address1\" :  \"" << M_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_ce1\" :  \"" << M_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_q1\" :  \"" << M_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

