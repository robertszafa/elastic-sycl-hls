// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _loop_imperfect_HH_
#define _loop_imperfect_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct loop_imperfect : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > dist_address0;
    sc_out< sc_logic > dist_ce0;
    sc_in< sc_lv<32> > dist_q0;
    sc_out< sc_lv<7> > dist_address1;
    sc_out< sc_logic > dist_ce1;
    sc_out< sc_logic > dist_we1;
    sc_out< sc_lv<32> > dist_d1;
    sc_in< sc_lv<32> > dist_q1;


    // Module declarations
    loop_imperfect(sc_module_name name);
    SC_HAS_PROCESS(loop_imperfect);

    ~loop_imperfect();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > zext_ln96_fu_93_p1;
    sc_signal< sc_lv<7> > zext_ln96_reg_229;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > k_fu_103_p2;
    sc_signal< sc_lv<4> > k_reg_237;
    sc_signal< sc_lv<7> > shl_ln_fu_109_p3;
    sc_signal< sc_lv<7> > shl_ln_reg_242;
    sc_signal< sc_lv<1> > icmp_ln96_fu_97_p2;
    sc_signal< sc_lv<5> > shl_ln99_1_fu_117_p3;
    sc_signal< sc_lv<5> > shl_ln99_1_reg_247;
    sc_signal< sc_lv<4> > i_fu_131_p2;
    sc_signal< sc_lv<4> > i_reg_255;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > add_ln99_4_fu_157_p2;
    sc_signal< sc_lv<7> > add_ln99_4_reg_260;
    sc_signal< sc_lv<1> > icmp_ln97_fu_125_p2;
    sc_signal< sc_lv<7> > dist_addr_reg_265;
    sc_signal< sc_lv<4> > j_fu_187_p2;
    sc_signal< sc_lv<4> > j_reg_273;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<7> > add_ln99_1_fu_193_p2;
    sc_signal< sc_lv<7> > add_ln99_1_reg_278;
    sc_signal< sc_lv<1> > icmp_ln98_fu_181_p2;
    sc_signal< sc_lv<7> > add_ln99_2_fu_207_p2;
    sc_signal< sc_lv<7> > add_ln99_2_reg_283;
    sc_signal< sc_lv<7> > dist_addr_1_reg_288;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > dist_load_reg_294;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > dist_load_1_reg_304;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > dist_load_2_reg_309;
    sc_signal< sc_lv<32> > add_ln99_3_fu_220_p2;
    sc_signal< sc_lv<32> > add_ln99_3_reg_314;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln99_fu_224_p2;
    sc_signal< sc_lv<1> > icmp_ln99_reg_319;
    sc_signal< sc_lv<4> > k_0_reg_60;
    sc_signal< sc_lv<4> > i_0_reg_71;
    sc_signal< sc_lv<4> > j_0_reg_82;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > zext_ln99_fu_168_p1;
    sc_signal< sc_lv<64> > zext_ln99_1_fu_212_p1;
    sc_signal< sc_lv<64> > zext_ln99_2_fu_216_p1;
    sc_signal< sc_lv<5> > shl_ln99_3_fu_145_p3;
    sc_signal< sc_lv<7> > zext_ln99_3_fu_153_p1;
    sc_signal< sc_lv<7> > shl_ln99_2_fu_137_p3;
    sc_signal< sc_lv<7> > add_ln99_fu_163_p2;
    sc_signal< sc_lv<7> > zext_ln98_1_fu_177_p1;
    sc_signal< sc_lv<5> > zext_ln98_fu_173_p1;
    sc_signal< sc_lv<5> > add_ln99_5_fu_198_p2;
    sc_signal< sc_lv<7> > zext_ln99_4_fu_203_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln99_1_fu_193_p2();
    void thread_add_ln99_2_fu_207_p2();
    void thread_add_ln99_3_fu_220_p2();
    void thread_add_ln99_4_fu_157_p2();
    void thread_add_ln99_5_fu_198_p2();
    void thread_add_ln99_fu_163_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dist_address0();
    void thread_dist_address1();
    void thread_dist_ce0();
    void thread_dist_ce1();
    void thread_dist_d1();
    void thread_dist_we1();
    void thread_i_fu_131_p2();
    void thread_icmp_ln96_fu_97_p2();
    void thread_icmp_ln97_fu_125_p2();
    void thread_icmp_ln98_fu_181_p2();
    void thread_icmp_ln99_fu_224_p2();
    void thread_j_fu_187_p2();
    void thread_k_fu_103_p2();
    void thread_shl_ln99_1_fu_117_p3();
    void thread_shl_ln99_2_fu_137_p3();
    void thread_shl_ln99_3_fu_145_p3();
    void thread_shl_ln_fu_109_p3();
    void thread_zext_ln96_fu_93_p1();
    void thread_zext_ln98_1_fu_177_p1();
    void thread_zext_ln98_fu_173_p1();
    void thread_zext_ln99_1_fu_212_p1();
    void thread_zext_ln99_2_fu_216_p1();
    void thread_zext_ln99_3_fu_153_p1();
    void thread_zext_ln99_4_fu_203_p1();
    void thread_zext_ln99_fu_168_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
